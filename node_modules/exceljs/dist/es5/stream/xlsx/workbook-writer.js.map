{"version":3,"sources":["../../../../lib/stream/xlsx/workbook-writer.js"],"names":["fs","require","Archiver","StreamBuf","RelType","StylesXform","SharedStrings","DefinedNames","CoreXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","SharedStringsXform","WorksheetWriter","theme1Xml","WorkbookWriter","module","exports","options","created","Date","modified","creator","lastModifiedBy","lastPrinted","useSharedStrings","sharedStrings","styles","useStyles","Mock","_definedNames","_worksheets","views","zipOptions","zip","media","stream","filename","createWriteStream","pipe","promise","Promise","all","addThemes","addOfficeRels","prototype","definedNames","_openStream","path","self","bufSize","batch","append","name","on","emit","_commitWorksheets","commitWorksheet","worksheet","committed","resolve","commit","promises","map","length","addContentTypes","addApp","addCore","addSharedStrings","addStyles","addWorkbookRels","addWorkbook","_finalize","nextId","i","addWorksheet","undefined","tabColor","console","trace","properties","Object","assign","id","workbook","state","pageSetup","autoFilter","getWorksheet","find","xml","xform","toXml","Id","Type","OfficeDocument","Target","CoreProperties","ExtenderProperties","model","worksheets","filter","Boolean","coreXform","count","sharedStringsXform","relationships","Styles","Theme","push","forEach","rId","Worksheet","prepare","reject","finalize"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst fs = require('fs');\r\nconst Archiver = require('archiver');\r\n\r\nconst StreamBuf = require('../../utils/stream-buf');\r\n\r\nconst RelType = require('../../xlsx/rel-type');\r\nconst StylesXform = require('../../xlsx/xform/style/styles-xform');\r\nconst SharedStrings = require('../../utils/shared-strings');\r\nconst DefinedNames = require('../../doc/defined-names');\r\n\r\nconst CoreXform = require('../../xlsx/xform/core/core-xform');\r\nconst RelationshipsXform = require('../../xlsx/xform/core/relationships-xform');\r\nconst ContentTypesXform = require('../../xlsx/xform/core/content-types-xform');\r\nconst AppXform = require('../../xlsx/xform/core/app-xform');\r\nconst WorkbookXform = require('../../xlsx/xform/book/workbook-xform');\r\nconst SharedStringsXform = require('../../xlsx/xform/strings/shared-strings-xform');\r\n\r\nconst WorksheetWriter = require('./worksheet-writer');\r\n\r\nconst theme1Xml = require('../../xlsx/xml/theme1.js');\r\n\r\nconst WorkbookWriter = (module.exports = function(options) {\r\n  options = options || {};\r\n\r\n  this.created = options.created || new Date();\r\n  this.modified = options.modified || this.created;\r\n  this.creator = options.creator || 'ExcelJS';\r\n  this.lastModifiedBy = options.lastModifiedBy || 'ExcelJS';\r\n  this.lastPrinted = options.lastPrinted;\r\n\r\n  // using shared strings creates a smaller xlsx file but may use more memory\r\n  this.useSharedStrings = options.useSharedStrings || false;\r\n  this.sharedStrings = new SharedStrings();\r\n\r\n  // style manager\r\n  this.styles = options.useStyles ? new StylesXform(true) : new StylesXform.Mock(true);\r\n\r\n  // defined names\r\n  this._definedNames = new DefinedNames();\r\n\r\n  this._worksheets = [];\r\n  this.views = [];\r\n\r\n  this.zipOptions = options.zip;\r\n\r\n  this.media = [];\r\n\r\n  this.zip = Archiver('zip', this.zipOptions);\r\n  if (options.stream) {\r\n    this.stream = options.stream;\r\n  } else if (options.filename) {\r\n    this.stream = fs.createWriteStream(options.filename);\r\n  } else {\r\n    this.stream = new StreamBuf();\r\n  }\r\n  this.zip.pipe(this.stream);\r\n\r\n  // these bits can be added right now\r\n  this.promise = Promise.all([this.addThemes(), this.addOfficeRels()]);\r\n});\r\n\r\nWorkbookWriter.prototype = {\r\n  get definedNames() {\r\n    return this._definedNames;\r\n  },\r\n\r\n  _openStream(path) {\r\n    const self = this;\r\n    const stream = new StreamBuf({bufSize: 65536, batch: true});\r\n    self.zip.append(stream, {name: path});\r\n    stream.on('finish', () => {\r\n      stream.emit('zipped');\r\n    });\r\n    return stream;\r\n  },\r\n  _commitWorksheets() {\r\n    const commitWorksheet = function(worksheet) {\r\n      if (!worksheet.committed) {\r\n        return new Promise(resolve => {\r\n          worksheet.stream.on('zipped', () => {\r\n            resolve();\r\n          });\r\n          worksheet.commit();\r\n        });\r\n      }\r\n      return Promise.resolve();\r\n    };\r\n    // if there are any uncommitted worksheets, commit them now and wait\r\n    const promises = this._worksheets.map(commitWorksheet);\r\n    if (promises.length) {\r\n      return Promise.all(promises);\r\n    }\r\n    return Promise.resolve();\r\n  },\r\n\r\n  async commit() {\r\n    // commit all worksheets, then add suplimentary files\r\n    await this.promise;\r\n    await this._commitWorksheets();\r\n    await Promise.all([this.addContentTypes(), this.addApp(), this.addCore(), this.addSharedStrings(), this.addStyles(), this.addWorkbookRels()]);\r\n    await this.addWorkbook();\r\n    return this._finalize();\r\n  },\r\n  get nextId() {\r\n    // find the next unique spot to add worksheet\r\n    let i;\r\n    for (i = 1; i < this._worksheets.length; i++) {\r\n      if (!this._worksheets[i]) {\r\n        return i;\r\n      }\r\n    }\r\n    return this._worksheets.length || 1;\r\n  },\r\n  addWorksheet(name, options) {\r\n    // it's possible to add a worksheet with different than default\r\n    // shared string handling\r\n    // in fact, it's even possible to switch it mid-sheet\r\n    options = options || {};\r\n    const useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : this.useSharedStrings;\r\n\r\n    if (options.tabColor) {\r\n      // eslint-disable-next-line no-console\r\n      console.trace('tabColor option has moved to { properties: tabColor: {...} }');\r\n      options.properties = Object.assign(\r\n        {\r\n          tabColor: options.tabColor,\r\n        },\r\n        options.properties\r\n      );\r\n    }\r\n\r\n    const id = this.nextId;\r\n    name = name || `sheet${id}`;\r\n\r\n    const worksheet = new WorksheetWriter({\r\n      id,\r\n      name,\r\n      workbook: this,\r\n      useSharedStrings,\r\n      properties: options.properties,\r\n      state: options.state,\r\n      pageSetup: options.pageSetup,\r\n      views: options.views,\r\n      autoFilter: options.autoFilter,\r\n    });\r\n\r\n    this._worksheets[id] = worksheet;\r\n    return worksheet;\r\n  },\r\n  getWorksheet(id) {\r\n    if (id === undefined) {\r\n      return this._worksheets.find(() => true);\r\n    }\r\n    if (typeof id === 'number') {\r\n      return this._worksheets[id];\r\n    }\r\n    if (typeof id === 'string') {\r\n      return this._worksheets.find(worksheet => worksheet && worksheet.name === id);\r\n    }\r\n    return undefined;\r\n  },\r\n  addStyles() {\r\n    const self = this;\r\n    return new Promise(resolve => {\r\n      self.zip.append(self.styles.xml, {name: 'xl/styles.xml'});\r\n      resolve();\r\n    });\r\n  },\r\n  addThemes() {\r\n    const self = this;\r\n    return new Promise(resolve => {\r\n      self.zip.append(theme1Xml, {name: 'xl/theme/theme1.xml'});\r\n      resolve();\r\n    });\r\n  },\r\n  addOfficeRels() {\r\n    const self = this;\r\n    return new Promise(resolve => {\r\n      const xform = new RelationshipsXform();\r\n      const xml = xform.toXml([\r\n        {Id: 'rId1', Type: RelType.OfficeDocument, Target: 'xl/workbook.xml'},\r\n        {Id: 'rId2', Type: RelType.CoreProperties, Target: 'docProps/core.xml'},\r\n        {Id: 'rId3', Type: RelType.ExtenderProperties, Target: 'docProps/app.xml'},\r\n      ]);\r\n      self.zip.append(xml, {name: '/_rels/.rels'});\r\n      resolve();\r\n    });\r\n  },\r\n\r\n  addContentTypes() {\r\n    return new Promise(resolve => {\r\n      const model = {\r\n        worksheets: this._worksheets.filter(Boolean),\r\n        sharedStrings: this.sharedStrings,\r\n      };\r\n      const xform = new ContentTypesXform();\r\n      const xml = xform.toXml(model);\r\n      this.zip.append(xml, {name: '[Content_Types].xml'});\r\n      resolve();\r\n    });\r\n  },\r\n  addApp() {\r\n    return new Promise(resolve => {\r\n      const model = {\r\n        worksheets: this._worksheets.filter(Boolean),\r\n      };\r\n      const xform = new AppXform();\r\n      const xml = xform.toXml(model);\r\n      this.zip.append(xml, {name: 'docProps/app.xml'});\r\n      resolve();\r\n    });\r\n  },\r\n  addCore() {\r\n    const self = this;\r\n    return new Promise(resolve => {\r\n      const coreXform = new CoreXform();\r\n      const xml = coreXform.toXml(self);\r\n      self.zip.append(xml, {name: 'docProps/core.xml'});\r\n      resolve();\r\n    });\r\n  },\r\n  addSharedStrings() {\r\n    const self = this;\r\n    if (this.sharedStrings.count) {\r\n      return new Promise(resolve => {\r\n        const sharedStringsXform = new SharedStringsXform();\r\n        const xml = sharedStringsXform.toXml(self.sharedStrings);\r\n        self.zip.append(xml, {name: '/xl/sharedStrings.xml'});\r\n        resolve();\r\n      });\r\n    }\r\n    return Promise.resolve();\r\n  },\r\n  addWorkbookRels() {\r\n    const self = this;\r\n    let count = 1;\r\n    const relationships = [\r\n      {Id: `rId${count++}`, Type: RelType.Styles, Target: 'styles.xml'},\r\n      {Id: `rId${count++}`, Type: RelType.Theme, Target: 'theme/theme1.xml'},\r\n    ];\r\n    if (this.sharedStrings.count) {\r\n      relationships.push({Id: `rId${count++}`, Type: RelType.SharedStrings, Target: 'sharedStrings.xml'});\r\n    }\r\n    this._worksheets.forEach(worksheet => {\r\n      if (worksheet) {\r\n        worksheet.rId = `rId${count++}`;\r\n        relationships.push({Id: worksheet.rId, Type: RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml`});\r\n      }\r\n    });\r\n    return new Promise(resolve => {\r\n      const xform = new RelationshipsXform();\r\n      const xml = xform.toXml(relationships);\r\n      self.zip.append(xml, {name: '/xl/_rels/workbook.xml.rels'});\r\n      resolve();\r\n    });\r\n  },\r\n  addWorkbook() {\r\n    const {zip} = this;\r\n    const model = {\r\n      worksheets: this._worksheets.filter(Boolean),\r\n      definedNames: this._definedNames.model,\r\n      views: this.views,\r\n      properties: {},\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      const xform = new WorkbookXform();\r\n      xform.prepare(model);\r\n      zip.append(xform.toXml(model), {name: '/xl/workbook.xml'});\r\n      resolve();\r\n    });\r\n  },\r\n  _finalize() {\r\n    return new Promise((resolve, reject) => {\r\n      this.stream.on('error', reject);\r\n      this.stream.on('finish', () => {\r\n        resolve(this);\r\n      });\r\n      this.zip.on('error', reject);\r\n\r\n      this.zip.finalize();\r\n    });\r\n  },\r\n};\r\n"],"file":"workbook-writer.js"}