{"version":3,"sources":["../../../lib/doc/cell.js"],"names":["colCache","require","_","Enums","slideFormula","Note","Cell","row","column","address","Error","_row","_column","validateAddress","_address","_value","Value","create","Types","Null","style","_mergeStyle","_mergeCount","rowStyle","colStyle","numFmt","font","alignment","border","fill","protection","toCsvString","master","release","Merge","type","isMergedTo","text","hyperlink","String","Hyperlink","value","name","workbook","definedNames","addEx","fullAddress","removeEx","removeAllNames","worksheet","number","letter","effectiveType","v","getType","_comment","note","toString","escapeHtml","formula","result","formulaType","sheetName","col","names","getNamesEx","forEach","dataValidations","_dataValidations","find","add","model","comment","ValueType","NullValue","cell","NumberValue","Number","StringValue","replace","RichTextValue","richText","map","t","join","RichText","DateValue","Date","toISOString","HyperlinkValue","Object","assign","undefined","tooltip","MergeValue","_master","addMergeRef","releaseMergeRef","FormulaValue","Formula","sharedFormula","_translatedFormula","findCell","ranges","match","cells","_getTranslatedFormula","FormulaType","Master","Shared","None","SharedStringValue","SharedString","BooleanValue","Boolean","ErrorValue","error","JSONValue","JSON","stringify","rawValue","sharedString","types","f","reduce","p","T","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMC,CAAC,GAAGD,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,SAAD,CAArB;;eACuBA,OAAO,CAAC,yBAAD,C;IAAvBG,Y,YAAAA,Y;;AACP,IAAMC,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAApB,C,CACA;AACA;AACA;AACA;;;IAEMK,I;;;AACJ,gBAAYC,GAAZ,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;AAAA;;AAChC,QAAI,CAACF,GAAD,IAAQ,CAACC,MAAb,EAAqB;AACnB,YAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAED,SAAKC,IAAL,GAAYJ,GAAZ;AACA,SAAKK,OAAL,GAAeJ,MAAf;AAEAR,IAAAA,QAAQ,CAACa,eAAT,CAAyBJ,OAAzB;AACA,SAAKK,QAAL,GAAgBL,OAAhB,CATgC,CAWhC;;AACA,SAAKM,MAAL,GAAcC,KAAK,CAACC,MAAN,CAAaX,IAAI,CAACY,KAAL,CAAWC,IAAxB,EAA8B,IAA9B,CAAd;AAEA,SAAKC,KAAL,GAAa,KAAKC,WAAL,CAAiBd,GAAG,CAACa,KAArB,EAA4BZ,MAAM,CAACY,KAAnC,EAA0C,EAA1C,CAAb;AAEA,SAAKE,WAAL,GAAmB,CAAnB;AACD;;;;AAUD;8BACU;AACR,aAAO,KAAKF,KAAZ;AACA,aAAO,KAAKL,MAAZ;AACA,aAAO,KAAKJ,IAAZ;AACA,aAAO,KAAKC,OAAZ;AACA,aAAO,KAAKE,QAAZ;AACD,K,CAED;AACA;;;;gCAiDYS,Q,EAAUC,Q,EAAUJ,K,EAAO;AACrC,UAAMK,MAAM,GAAIF,QAAQ,IAAIA,QAAQ,CAACE,MAAtB,IAAkCD,QAAQ,IAAIA,QAAQ,CAACC,MAAtE;AACA,UAAIA,MAAJ,EAAYL,KAAK,CAACK,MAAN,GAAeA,MAAf;AAEZ,UAAMC,IAAI,GAAIH,QAAQ,IAAIA,QAAQ,CAACG,IAAtB,IAAgCF,QAAQ,IAAIA,QAAQ,CAACE,IAAlE;AACA,UAAIA,IAAJ,EAAUN,KAAK,CAACM,IAAN,GAAaA,IAAb;AAEV,UAAMC,SAAS,GAAIJ,QAAQ,IAAIA,QAAQ,CAACI,SAAtB,IAAqCH,QAAQ,IAAIA,QAAQ,CAACG,SAA5E;AACA,UAAIA,SAAJ,EAAeP,KAAK,CAACO,SAAN,GAAkBA,SAAlB;AAEf,UAAMC,MAAM,GAAIL,QAAQ,IAAIA,QAAQ,CAACK,MAAtB,IAAkCJ,QAAQ,IAAIA,QAAQ,CAACI,MAAtE;AACA,UAAIA,MAAJ,EAAYR,KAAK,CAACQ,MAAN,GAAeA,MAAf;AAEZ,UAAMC,IAAI,GAAIN,QAAQ,IAAIA,QAAQ,CAACM,IAAtB,IAAgCL,QAAQ,IAAIA,QAAQ,CAACK,IAAlE;AACA,UAAIA,IAAJ,EAAUT,KAAK,CAACS,IAAN,GAAaA,IAAb;AAEV,UAAMC,UAAU,GAAIP,QAAQ,IAAIA,QAAQ,CAACO,UAAtB,IAAsCN,QAAQ,IAAIA,QAAQ,CAACM,UAA9E;AACA,UAAIA,UAAJ,EAAgBV,KAAK,CAACU,UAAN,GAAmBA,UAAnB;AAEhB,aAAOV,KAAP;AACD,K,CAED;AACA;;;;kCA4Bc;AACZ,aAAO,KAAKL,MAAL,CAAYgB,WAAZ,EAAP;AACD,K,CAED;AACA;;;;kCAEc;AACZ,WAAKT,WAAL;AACD;;;sCAEiB;AAChB,WAAKA,WAAL;AACD;;;0BAMKU,M,EAAQ;AACZ,WAAKjB,MAAL,CAAYkB,OAAZ;;AACA,WAAKlB,MAAL,GAAcC,KAAK,CAACC,MAAN,CAAaX,IAAI,CAACY,KAAL,CAAWgB,KAAxB,EAA+B,IAA/B,EAAqCF,MAArC,CAAd;AACA,WAAKZ,KAAL,GAAaY,MAAM,CAACZ,KAApB;AACD;;;8BAES;AACR,UAAI,KAAKe,IAAL,KAAc7B,IAAI,CAACY,KAAL,CAAWgB,KAA7B,EAAoC;AAClC,aAAKnB,MAAL,CAAYkB,OAAZ;;AACA,aAAKlB,MAAL,GAAcC,KAAK,CAACC,MAAN,CAAaX,IAAI,CAACY,KAAL,CAAWC,IAAxB,EAA8B,IAA9B,CAAd;AACA,aAAKC,KAAL,GAAa,KAAKC,WAAL,CAAiB,KAAKV,IAAL,CAAUS,KAA3B,EAAkC,KAAKR,OAAL,CAAaQ,KAA/C,EAAsD,EAAtD,CAAb;AACD;AACF;;;+BAEUY,M,EAAQ;AACjB,UAAI,KAAKjB,MAAL,CAAYoB,IAAZ,KAAqB7B,IAAI,CAACY,KAAL,CAAWgB,KAApC,EAA2C,OAAO,KAAP;AAC3C,aAAO,KAAKnB,MAAL,CAAYqB,UAAZ,CAAuBJ,MAAvB,CAAP;AACD;;;+BAoDU;AACT,aAAO,KAAKK,IAAZ;AACD;;;wCAEmBC,S,EAAW;AAC7B;AACA,UAAI,KAAKH,IAAL,KAAc7B,IAAI,CAACY,KAAL,CAAWqB,MAA7B,EAAqC;AACnC,aAAKxB,MAAL,GAAcC,KAAK,CAACC,MAAN,CAAaX,IAAI,CAACY,KAAL,CAAWsB,SAAxB,EAAmC,IAAnC,EAAyC;AACrDH,UAAAA,IAAI,EAAE,KAAKtB,MAAL,CAAY0B,KADmC;AAErDH,UAAAA,SAAS,EAATA;AAFqD,SAAzC,CAAd;AAID;AACF,K,CAED;AACA;;;;4BA6CQI,I,EAAM;AACZ,WAAKC,QAAL,CAAcC,YAAd,CAA2BC,KAA3B,CAAiC,KAAKC,WAAtC,EAAmDJ,IAAnD;AACD;;;+BAEUA,I,EAAM;AACf,WAAKC,QAAL,CAAcC,YAAd,CAA2BG,QAA3B,CAAoC,KAAKD,WAAzC,EAAsDJ,IAAtD;AACD;;;qCAEgB;AACf,WAAKC,QAAL,CAAcC,YAAd,CAA2BI,cAA3B,CAA0C,KAAKF,WAA/C;AACD,K,CAED;AACA;;;;wBAvRgB;AACd,aAAO,KAAKnC,IAAL,CAAUsC,SAAjB;AACD;;;wBAEc;AACb,aAAO,KAAKtC,IAAL,CAAUsC,SAAV,CAAoBN,QAA3B;AACD;;;wBAaY;AACX,aAAO,KAAKvB,KAAL,CAAWK,MAAlB;AACD,K;sBAEUgB,K,EAAO;AAChB,WAAKrB,KAAL,CAAWK,MAAX,GAAoBgB,KAApB;AACD;;;wBAEU;AACT,aAAO,KAAKrB,KAAL,CAAWM,IAAlB;AACD,K;sBAEQe,K,EAAO;AACd,WAAKrB,KAAL,CAAWM,IAAX,GAAkBe,KAAlB;AACD;;;wBAEe;AACd,aAAO,KAAKrB,KAAL,CAAWO,SAAlB;AACD,K;sBAEac,K,EAAO;AACnB,WAAKrB,KAAL,CAAWO,SAAX,GAAuBc,KAAvB;AACD;;;wBAEY;AACX,aAAO,KAAKrB,KAAL,CAAWQ,MAAlB;AACD,K;sBAEUa,K,EAAO;AAChB,WAAKrB,KAAL,CAAWQ,MAAX,GAAoBa,KAApB;AACD;;;wBAEU;AACT,aAAO,KAAKrB,KAAL,CAAWS,IAAlB;AACD,K;sBAEQY,K,EAAO;AACd,WAAKrB,KAAL,CAAWS,IAAX,GAAkBY,KAAlB;AACD;;;wBAEgB;AACf,aAAO,KAAKrB,KAAL,CAAWU,UAAlB;AACD,K;sBAEcW,K,EAAO;AACpB,WAAKrB,KAAL,CAAWU,UAAX,GAAwBW,KAAxB;AACD;;;wBA0Ba;AACZ,aAAO,KAAK3B,QAAZ;AACD;;;wBAES;AACR,aAAO,KAAKH,IAAL,CAAUuC,MAAjB;AACD;;;wBAES;AACR,aAAO,KAAKtC,OAAL,CAAasC,MAApB;AACD;;;wBAEc;AACb,wBAAW,KAAKtC,OAAL,CAAauC,MAAxB,cAAkC,KAAK5C,GAAvC;AACD,K,CAED;AACA;;;;wBAEW;AACT,aAAO,KAAKQ,MAAL,CAAYoB,IAAnB;AACD;;;wBAEmB;AAClB,aAAO,KAAKpB,MAAL,CAAYqC,aAAnB;AACD;;;wBAiBc;AACb,aAAQ,KAAK9B,WAAL,GAAmB,CAApB,IAA2B,KAAKa,IAAL,KAAc7B,IAAI,CAACY,KAAL,CAAWgB,KAA3D;AACD;;;wBAqBY;AACX,UAAI,KAAKC,IAAL,KAAc7B,IAAI,CAACY,KAAL,CAAWgB,KAA7B,EAAoC;AAClC,eAAO,KAAKnB,MAAL,CAAYiB,MAAnB;AACD;;AACD,aAAO,IAAP,CAJW,CAIE;AACd;;;wBAEiB;AAChB,aAAO,KAAKjB,MAAL,CAAYoB,IAAZ,KAAqB7B,IAAI,CAACY,KAAL,CAAWsB,SAAvC;AACD;;;wBAEe;AACd,aAAO,KAAKzB,MAAL,CAAYuB,SAAnB;AACD,K,CAED;;;;wBACY;AACV,aAAO,KAAKvB,MAAL,CAAY0B,KAAnB;AACD,K,CAED;;sBACUY,C,EAAG;AACX;AACA,UAAI,KAAKlB,IAAL,KAAc7B,IAAI,CAACY,KAAL,CAAWgB,KAA7B,EAAoC;AAClC,aAAKnB,MAAL,CAAYiB,MAAZ,CAAmBS,KAAnB,GAA2BY,CAA3B;AACA;AACD;;AAED,WAAKtC,MAAL,CAAYkB,OAAZ,GAPW,CASX;;;AACA,WAAKlB,MAAL,GAAcC,KAAK,CAACC,MAAN,CAAaD,KAAK,CAACsC,OAAN,CAAcD,CAAd,CAAb,EAA+B,IAA/B,EAAqCA,CAArC,CAAd;AACD;;;wBAEU;AACT,aAAO,KAAKE,QAAL,IAAiB,KAAKA,QAAL,CAAcC,IAAtC;AACD,K;sBAEQA,I,EAAM;AACb,WAAKD,QAAL,GAAgB,IAAIlD,IAAJ,CAASmD,IAAT,CAAhB;AACD;;;wBAEU;AACT,aAAO,KAAKzC,MAAL,CAAY0C,QAAZ,EAAP;AACD;;;wBAEU;AACT,aAAOvD,CAAC,CAACwD,UAAF,CAAa,KAAKrB,IAAlB,CAAP;AACD;;;wBAkBa;AACZ,aAAO,KAAKtB,MAAL,CAAY4C,OAAnB;AACD;;;wBAEY;AACX,aAAO,KAAK5C,MAAL,CAAY6C,MAAnB;AACD;;;wBAEiB;AAChB,aAAO,KAAK7C,MAAL,CAAY8C,WAAnB;AACD,K,CAED;AACA;;;;wBACkB;AAAA,UACTZ,SADS,GACI,KAAKtC,IADT,CACTsC,SADS;AAEhB,aAAO;AACLa,QAAAA,SAAS,EAAEb,SAAS,CAACP,IADhB;AAELjC,QAAAA,OAAO,EAAE,KAAKA,OAFT;AAGLF,QAAAA,GAAG,EAAE,KAAKA,GAHL;AAILwD,QAAAA,GAAG,EAAE,KAAKA;AAJL,OAAP;AAMD;;;wBAEU;AACT,aAAO,KAAKC,KAAL,CAAW,CAAX,CAAP;AACD,K;sBAEQvB,K,EAAO;AACd,WAAKuB,KAAL,GAAa,CAACvB,KAAD,CAAb;AACD;;;wBAEW;AACV,aAAO,KAAKE,QAAL,CAAcC,YAAd,CAA2BqB,UAA3B,CAAsC,KAAKnB,WAA3C,CAAP;AACD,K;sBAESL,K,EAAO;AAAA;;AAAA,UACRG,YADQ,GACQ,KAAKD,QADb,CACRC,YADQ;AAEfA,MAAAA,YAAY,CAACI,cAAb,CAA4B,KAAKF,WAAjC;AACAL,MAAAA,KAAK,CAACyB,OAAN,CAAc,UAAAxB,IAAI,EAAI;AACpBE,QAAAA,YAAY,CAACC,KAAb,CAAmB,KAAI,CAACC,WAAxB,EAAqCJ,IAArC;AACD,OAFD;AAGD;;;wBAgBsB;AACrB,aAAO,KAAKO,SAAL,CAAekB,eAAtB;AACD;;;wBAEoB;AACnB,aAAO,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,KAAK5D,OAAhC,CAAP;AACD,K;sBAEkBgC,K,EAAO;AACxB,WAAK2B,gBAAL,CAAsBE,GAAtB,CAA0B,KAAK7D,OAA/B,EAAwCgC,KAAxC;AACD,K,CAED;AACA;;;;wBAEY;AAAA,UACH8B,KADG,GACM,KAAKxD,MADX,CACHwD,KADG;AAEVA,MAAAA,KAAK,CAACnD,KAAN,GAAc,KAAKA,KAAnB;;AACA,UAAI,KAAKmC,QAAT,EAAkB;AAChBgB,QAAAA,KAAK,CAACC,OAAN,GAAgB,KAAKjB,QAAL,CAAcgB,KAA9B;AACD;;AACD,aAAOA,KAAP;AACD,K;sBAES9B,K,EAAO;AACf,WAAK1B,MAAL,CAAYkB,OAAZ;;AACA,WAAKlB,MAAL,GAAcC,KAAK,CAACC,MAAN,CAAawB,KAAK,CAACN,IAAnB,EAAyB,IAAzB,CAAd;AACA,WAAKpB,MAAL,CAAYwD,KAAZ,GAAoB9B,KAApB;;AAEA,UAAIA,KAAK,CAAC+B,OAAV,EAAmB;AACjB,gBAAQ/B,KAAK,CAAC+B,OAAN,CAAcrC,IAAtB;AACE,eAAK,MAAL;AACE,iBAAKoB,QAAL,GAAgB,IAAIlD,IAAJ,CAASoC,KAAK,CAAC+B,OAAN,CAAchB,IAAvB,CAAhB;AACA;AAHJ;AAKD;;AAED,UAAIf,KAAK,CAACrB,KAAV,EAAiB;AACf,aAAKA,KAAL,GAAaqB,KAAK,CAACrB,KAAnB;AACD,OAFD,MAEO;AACL,aAAKA,KAAL,GAAa,EAAb;AACD;AACF;;;;;;AAEHd,IAAI,CAACY,KAAL,GAAaf,KAAK,CAACsE,SAAnB,C,CAEA;AACA;;IAEMC,S;;;AACJ,qBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKJ,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWC;AAFN,KAAb;AAID;;;;kCA0Ba;AACZ,aAAO,EAAP;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,EAAP;AACD;;;wBAhCW;AACV,aAAO,IAAP;AACD,K;sBAESsB,K,EAAO,CACf;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWC,IAAlB;AACD;;;wBAEmB;AAClB,aAAOb,IAAI,CAACY,KAAL,CAAWC,IAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKoD,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaGmC,W;;;AACJ,uBAAYD,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAW2D,MAFN;AAGXpC,MAAAA,KAAK,EAALA;AAHW,KAAb;AAKD;;;;kCA0Ba;AACZ,aAAO,KAAK8B,KAAL,CAAW9B,KAAX,CAAiBgB,QAAjB,EAAP;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAKc,KAAL,CAAW9B,KAAX,CAAiBgB,QAAjB,EAAP;AACD;;;wBAhCW;AACV,aAAO,KAAKc,KAAL,CAAW9B,KAAlB;AACD,K;sBAESA,K,EAAO;AACf,WAAK8B,KAAL,CAAW9B,KAAX,GAAmBA,KAAnB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAW2D,MAAlB;AACD;;;wBAEmB;AAClB,aAAOvE,IAAI,CAACY,KAAL,CAAW2D,MAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKN,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaGqC,W;;;AACJ,uBAAYH,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWqB,MAFN;AAGXE,MAAAA,KAAK,EAALA;AAHW,KAAb;AAKD;;;;kCA0Ba;AACZ,yBAAW,KAAK8B,KAAL,CAAW9B,KAAX,CAAiBsC,OAAjB,CAAyB,IAAzB,EAA+B,IAA/B,CAAX;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAKR,KAAL,CAAW9B,KAAlB;AACD;;;wBAhCW;AACV,aAAO,KAAK8B,KAAL,CAAW9B,KAAlB;AACD,K;sBAESA,K,EAAO;AACf,WAAK8B,KAAL,CAAW9B,KAAX,GAAmBA,KAAnB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWqB,MAAlB;AACD;;;wBAEmB;AAClB,aAAOjC,IAAI,CAACY,KAAL,CAAWqB,MAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKgC,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaGuC,a;;;AACJ,yBAAYL,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWqB,MAFN;AAGXE,MAAAA,KAAK,EAALA;AAHW,KAAb;AAKD;;;;+BAUU;AACT,aAAO,KAAK8B,KAAL,CAAW9B,KAAX,CAAiBwC,QAAjB,CAA0BC,GAA1B,CAA8B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAAC9C,IAAN;AAAA,OAA/B,EAA2C+C,IAA3C,CAAgD,EAAhD,CAAP;AACD;;;kCAkBa;AACZ,yBAAW,KAAK/C,IAAL,CAAU0C,OAAV,CAAkB,IAAlB,EAAwB,IAAxB,CAAX;AACD;;;8BAES,CAAE;;;wBAhCA;AACV,aAAO,KAAKR,KAAL,CAAW9B,KAAlB;AACD,K;sBAESA,K,EAAO;AACf,WAAK8B,KAAL,CAAW9B,KAAX,GAAmBA,KAAnB;AACD;;;wBAMU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWmE,QAAlB;AACD;;;wBAEmB;AAClB,aAAO/E,IAAI,CAACY,KAAL,CAAWmE,QAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKd,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IASG6C,S;;;AACJ,qBAAYX,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWqE,IAFN;AAGX9C,MAAAA,KAAK,EAALA;AAHW,KAAb;AAKD;;;;kCA0Ba;AACZ,aAAO,KAAK8B,KAAL,CAAW9B,KAAX,CAAiB+C,WAAjB,EAAP;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAKjB,KAAL,CAAW9B,KAAX,CAAiBgB,QAAjB,EAAP;AACD;;;wBAhCW;AACV,aAAO,KAAKc,KAAL,CAAW9B,KAAlB;AACD,K;sBAESA,K,EAAO;AACf,WAAK8B,KAAL,CAAW9B,KAAX,GAAmBA,KAAnB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWqE,IAAlB;AACD;;;wBAEmB;AAClB,aAAOjF,IAAI,CAACY,KAAL,CAAWqE,IAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKhB,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaGgD,c;;;AACJ,0BAAYd,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAamB,MAAM,CAACC,MAAP,CACX;AACElF,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADhB;AAEE0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWsB,SAFnB;AAGEH,MAAAA,IAAI,EAAEI,KAAK,GAAGA,KAAK,CAACJ,IAAT,GAAgBuD,SAH7B;AAIEtD,MAAAA,SAAS,EAAEG,KAAK,GAAGA,KAAK,CAACH,SAAT,GAAqBsD;AAJvC,KADW,EAOXnD,KAAK,IAAIA,KAAK,CAACoD,OAAf,GAAyB;AAACA,MAAAA,OAAO,EAAEpD,KAAK,CAACoD;AAAhB,KAAzB,GAAoD,EAPzC,CAAb;AASD;;;;kCA+Da;AACZ,aAAO,KAAKtB,KAAL,CAAWjC,SAAlB;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAKiC,KAAL,CAAWlC,IAAlB;AACD;;;wBArEW;AACV,aAAOqD,MAAM,CAACC,MAAP,CACL;AACEtD,QAAAA,IAAI,EAAE,KAAKkC,KAAL,CAAWlC,IADnB;AAEEC,QAAAA,SAAS,EAAE,KAAKiC,KAAL,CAAWjC;AAFxB,OADK,EAKL,KAAKiC,KAAL,CAAWsB,OAAX,GAAqB;AAACA,QAAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWsB;AAArB,OAArB,GAAqD,EALhD,CAAP;AAOD,K;sBAESpD,K,EAAO;AACf,WAAK8B,KAAL,GAAamB,MAAM,CAACC,MAAP,CACX;AACEtD,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IADd;AAEEC,QAAAA,SAAS,EAAEG,KAAK,CAACH;AAFnB,OADW,EAKXG,KAAK,IAAIA,KAAK,CAACoD,OAAf,GAAyB;AAACA,QAAAA,OAAO,EAAEpD,KAAK,CAACoD;AAAhB,OAAzB,GAAoD,EALzC,CAAb;AAOD;;;wBAEU;AACT,aAAO,KAAKtB,KAAL,CAAWlC,IAAlB;AACD,K;sBAEQI,K,EAAO;AACd,WAAK8B,KAAL,CAAWlC,IAAX,GAAkBI,KAAlB;AACD;AAED;;;;;;;;;;wBASgB;AACd,aAAO,KAAK8B,KAAL,CAAWjC,SAAlB;AACD,K;sBAEaG,K,EAAO;AACnB,WAAK8B,KAAL,CAAWjC,SAAX,GAAuBG,KAAvB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWsB,SAAlB;AACD;;;wBAEmB;AAClB,aAAOlC,IAAI,CAACY,KAAL,CAAWsB,SAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAK+B,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaGqD,U;;;AACJ,sBAAYnB,IAAZ,EAAkB3C,MAAlB,EAA0B;AAAA;;AACxB,SAAKuC,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWgB,KAFN;AAGXF,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACvB,OAAV,GAAoBmF;AAHvB,KAAb;AAKA,SAAKG,OAAL,GAAe/D,MAAf;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACgE,WAAP;AACD;AACF;;;;+BAkBUhE,M,EAAQ;AACjB,aAAOA,MAAM,KAAK,KAAK+D,OAAvB;AACD;;;kCAsBa;AACZ,aAAO,EAAP;AACD;;;8BAES;AACR,WAAKA,OAAL,CAAaE,eAAb;AACD;;;+BAEU;AACT,aAAO,KAAKxD,KAAL,CAAWgB,QAAX,EAAP;AACD;;;wBAlDW;AACV,aAAO,KAAKsC,OAAL,CAAatD,KAApB;AACD,K;sBAESA,K,EAAO;AACf,UAAIA,KAAK,YAAYnC,IAArB,EAA2B;AACzB,YAAI,KAAKyF,OAAT,EAAkB;AAChB,eAAKA,OAAL,CAAaE,eAAb;AACD;;AACDxD,QAAAA,KAAK,CAACuD,WAAN;AACA,aAAKD,OAAL,GAAetD,KAAf;AACD,OAND,MAMO;AACL,aAAKsD,OAAL,CAAatD,KAAb,GAAqBA,KAArB;AACD;AACF;;;wBAMY;AACX,aAAO,KAAKsD,OAAZ;AACD;;;wBAEU;AACT,aAAOzF,IAAI,CAACY,KAAL,CAAWgB,KAAlB;AACD;;;wBAEmB;AAClB,aAAO,KAAK6D,OAAL,CAAa3C,aAApB;AACD;;;wBAEa;AACZ,aAAO,KAAKmB,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAeGyD,Y;;;AACJ,wBAAYvB,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAKkC,IAAL,GAAYA,IAAZ;AACA,SAAKJ,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWiF,OAFN;AAGXxC,MAAAA,OAAO,EAAElB,KAAK,GAAGA,KAAK,CAACkB,OAAT,GAAmBiC,SAHtB;AAIXQ,MAAAA,aAAa,EAAE3D,KAAK,GAAGA,KAAK,CAAC2D,aAAT,GAAyBR,SAJlC;AAKXhC,MAAAA,MAAM,EAAEnB,KAAK,GAAGA,KAAK,CAACmB,MAAT,GAAkBgC;AALpB,KAAb;AAOD;;;;6BAoBQnD,K,EAAO;AACd,cAAQzB,KAAK,CAACsC,OAAN,CAAcb,KAAd,CAAR;AACE,aAAKnC,IAAI,CAACY,KAAL,CAAWC,IAAhB;AACA,aAAKb,IAAI,CAACY,KAAL,CAAWqB,MAAhB;AACA,aAAKjC,IAAI,CAACY,KAAL,CAAW2D,MAAhB;AACA,aAAKvE,IAAI,CAACY,KAAL,CAAWqE,IAAhB;AACE;;AACF,aAAKjF,IAAI,CAACY,KAAL,CAAWsB,SAAhB;AACA,aAAKlC,IAAI,CAACY,KAAL,CAAWiF,OAAhB;AACA;AACE,gBAAM,IAAIzF,KAAJ,CAAU,0CAAV,CAAN;AATJ;AAWD;;;4CA8EuB;AACtB,UAAI,CAAC,KAAK2F,kBAAN,IAA4B,KAAK9B,KAAL,CAAW6B,aAA3C,EAA0D;AAAA,YACjDnD,SADiD,GACpC,KAAK0B,IAD+B,CACjD1B,SADiD;AAExD,YAAMjB,MAAM,GAAGiB,SAAS,CAACqD,QAAV,CAAmB,KAAK/B,KAAL,CAAW6B,aAA9B,CAAf;AACA,aAAKC,kBAAL,GAA0BrE,MAAM,IAC9B5B,YAAY,CAAC4B,MAAM,CAAC2B,OAAR,EAAiB3B,MAAM,CAACvB,OAAxB,EAAiC,KAAK8D,KAAL,CAAW9D,OAA5C,CADd;AAED;;AACD,aAAO,KAAK4F,kBAAZ;AACD;;;kCAEa;AACZ,uBAAU,KAAK9B,KAAL,CAAWX,MAAX,IAAqB,EAA/B;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAKW,KAAL,CAAWX,MAAX,GAAoB,KAAKW,KAAL,CAAWX,MAAX,CAAkBH,QAAlB,EAApB,GAAmD,EAA1D;AACD;;;wBA9HW;AACV,aAAO,KAAKc,KAAL,CAAWZ,OAAX,GACH;AACEA,QAAAA,OAAO,EAAE,KAAKY,KAAL,CAAWZ,OADtB;AAEEC,QAAAA,MAAM,EAAE,KAAKW,KAAL,CAAWX;AAFrB,OADG,GAKH;AACEwC,QAAAA,aAAa,EAAE,KAAK7B,KAAL,CAAW6B,aAD5B;AAEExC,QAAAA,MAAM,EAAE,KAAKW,KAAL,CAAWX;AAFrB,OALJ;AASD,K;sBAESnB,K,EAAO;AACf,WAAK8B,KAAL,CAAWZ,OAAX,GAAqBlB,KAAK,CAACkB,OAA3B;AACA,WAAKY,KAAL,CAAW6B,aAAX,GAA2B3D,KAAK,CAAC2D,aAAjC;AACA,WAAK7B,KAAL,CAAWX,MAAX,GAAoBnB,KAAK,CAACmB,MAA1B;AACD;;;wBAgBkB;AACjB;AACA,UAAM2C,MAAM,GAAG,KAAK5C,OAAL,CACZ6C,KADY,CACN,sDADM,CAAf;AAEA,UAAMC,KAAK,GAAG,KAAK9C,OAAL,CACXoB,OADW,CACH,sDADG,EACqD,EADrD,EAEXyB,KAFW,CAEL,oCAFK,CAAd;AAGA,aAAO;AACLD,QAAAA,MAAM,EAANA,MADK;AAELE,QAAAA,KAAK,EAALA;AAFK,OAAP;AAID;;;wBAEa;AACZ,aAAO,KAAKlC,KAAL,CAAWZ,OAAX,IACL,KAAK+C,qBAAL,EADF;AAED,K;sBAEWjE,K,EAAO;AACjB,WAAK8B,KAAL,CAAWZ,OAAX,GAAqBlB,KAArB;AACD;;;wBAEiB;AAChB,UAAI,KAAK8B,KAAL,CAAWZ,OAAf,EAAwB;AACtB,eAAOxD,KAAK,CAACwG,WAAN,CAAkBC,MAAzB;AACD;;AACD,UAAI,KAAKrC,KAAL,CAAW6B,aAAf,EAA8B;AAC5B,eAAOjG,KAAK,CAACwG,WAAN,CAAkBE,MAAzB;AACD;;AACD,aAAO1G,KAAK,CAACwG,WAAN,CAAkBG,IAAzB;AACD;;;wBAEY;AACX,aAAO,KAAKvC,KAAL,CAAWX,MAAlB;AACD,K;sBAEUnB,K,EAAO;AAChB,WAAK8B,KAAL,CAAWX,MAAX,GAAoBnB,KAApB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWiF,OAAlB;AACD;;;wBAEmB;AAClB,UAAM9C,CAAC,GAAG,KAAKkB,KAAL,CAAWX,MAArB;;AACA,UAAKP,CAAC,KAAK,IAAP,IAAiBA,CAAC,KAAKuC,SAA3B,EAAuC;AACrC,eAAOzF,KAAK,CAACsE,SAAN,CAAgBtD,IAAvB;AACD;;AACD,UAAIkC,CAAC,YAAYd,MAAb,IAAuB,OAAOc,CAAP,KAAa,QAAxC,EAAkD;AAChD,eAAOlD,KAAK,CAACsE,SAAN,CAAgBlC,MAAvB;AACD;;AACD,UAAI,OAAOc,CAAP,KAAa,QAAjB,EAA2B;AACzB,eAAOlD,KAAK,CAACsE,SAAN,CAAgBI,MAAvB;AACD;;AACD,UAAIxB,CAAC,YAAYkC,IAAjB,EAAuB;AACrB,eAAOpF,KAAK,CAACsE,SAAN,CAAgBc,IAAvB;AACD;;AACD,UAAIlC,CAAC,CAAChB,IAAF,IAAUgB,CAAC,CAACf,SAAhB,EAA2B;AACzB,eAAOnC,KAAK,CAACsE,SAAN,CAAgBjC,SAAvB;AACD;;AACD,UAAIa,CAAC,CAACM,OAAN,EAAe;AACb,eAAOxD,KAAK,CAACsE,SAAN,CAAgB0B,OAAvB;AACD;;AAED,aAAOhG,KAAK,CAACsE,SAAN,CAAgBtD,IAAvB;AACD;;;wBAEa;AACZ,aAAO,KAAKoD,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAuBGsE,iB;;;AACJ,6BAAYpC,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAW8F,YAFN;AAGXvE,MAAAA,KAAK,EAALA;AAHW,KAAb;AAKD;;;;kCA0Ba;AACZ,aAAO,KAAK8B,KAAL,CAAW9B,KAAX,CAAiBgB,QAAjB,EAAP;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAKc,KAAL,CAAW9B,KAAX,CAAiBgB,QAAjB,EAAP;AACD;;;wBAhCW;AACV,aAAO,KAAKc,KAAL,CAAW9B,KAAlB;AACD,K;sBAESA,K,EAAO;AACf,WAAK8B,KAAL,CAAW9B,KAAX,GAAmBA,KAAnB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAW8F,YAAlB;AACD;;;wBAEmB;AAClB,aAAO1G,IAAI,CAACY,KAAL,CAAW8F,YAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKzC,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaGwE,Y;;;AACJ,wBAAYtC,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWgG,OAFN;AAGXzE,MAAAA,KAAK,EAALA;AAHW,KAAb;AAKD;;;;kCA0Ba;AACZ,aAAO,KAAK8B,KAAL,CAAW9B,KAAX,GAAmB,CAAnB,GAAuB,CAA9B;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAK8B,KAAL,CAAW9B,KAAX,CAAiBgB,QAAjB,EAAP;AACD;;;wBAhCW;AACV,aAAO,KAAKc,KAAL,CAAW9B,KAAlB;AACD,K;sBAESA,K,EAAO;AACf,WAAK8B,KAAL,CAAW9B,KAAX,GAAmBA,KAAnB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWgG,OAAlB;AACD;;;wBAEmB;AAClB,aAAO5G,IAAI,CAACY,KAAL,CAAWgG,OAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAK3C,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaG0E,U;;;AACJ,sBAAYxC,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWR,KAFN;AAGX+B,MAAAA,KAAK,EAALA;AAHW,KAAb;AAKD;;;;kCA0Ba;AACZ,aAAO,KAAKgB,QAAL,EAAP;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAKc,KAAL,CAAW9B,KAAX,CAAiB2E,KAAjB,CAAuB3D,QAAvB,EAAP;AACD;;;wBAhCW;AACV,aAAO,KAAKc,KAAL,CAAW9B,KAAlB;AACD,K;sBAESA,K,EAAO;AACf,WAAK8B,KAAL,CAAW9B,KAAX,GAAmBA,KAAnB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWR,KAAlB;AACD;;;wBAEmB;AAClB,aAAOJ,IAAI,CAACY,KAAL,CAAWR,KAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAK6D,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;;;IAaG4E,S;;;AACJ,qBAAY1C,IAAZ,EAAkBlC,KAAlB,EAAyB;AAAA;;AACvB,SAAK8B,KAAL,GAAa;AACX9D,MAAAA,OAAO,EAAEkE,IAAI,CAAClE,OADH;AAEX0B,MAAAA,IAAI,EAAE7B,IAAI,CAACY,KAAL,CAAWqB,MAFN;AAGXE,MAAAA,KAAK,EAAE6E,IAAI,CAACC,SAAL,CAAe9E,KAAf,CAHI;AAIX+E,MAAAA,QAAQ,EAAE/E;AAJC,KAAb;AAMD;;;;kCA2Ba;AACZ,aAAO,KAAK8B,KAAL,CAAW9B,KAAlB;AACD;;;8BAES,CAAE;;;+BAED;AACT,aAAO,KAAK8B,KAAL,CAAW9B,KAAlB;AACD;;;wBAjCW;AACV,aAAO,KAAK8B,KAAL,CAAWiD,QAAlB;AACD,K;sBAES/E,K,EAAO;AACf,WAAK8B,KAAL,CAAWiD,QAAX,GAAsB/E,KAAtB;AACA,WAAK8B,KAAL,CAAW9B,KAAX,GAAmB6E,IAAI,CAACC,SAAL,CAAe9E,KAAf,CAAnB;AACD;;;wBAEU;AACT,aAAOnC,IAAI,CAACY,KAAL,CAAWqB,MAAlB;AACD;;;wBAEmB;AAClB,aAAOjC,IAAI,CAACY,KAAL,CAAWqB,MAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKgC,KAAL,CAAW9D,OAAlB;AACD,K;sBAEWgC,K,EAAO;AACjB,WAAK8B,KAAL,CAAW9D,OAAX,GAAqBgC,KAArB;AACD;;;;KAaH;;;AACA,IAAMzB,KAAK,GAAG;AACZsC,EAAAA,OADY,mBACJb,KADI,EACG;AACb,QAAKA,KAAK,KAAK,IAAX,IAAqBA,KAAK,KAAKmD,SAAnC,EAA+C;AAC7C,aAAOtF,IAAI,CAACY,KAAL,CAAWC,IAAlB;AACD;;AACD,QAAIsB,KAAK,YAAYF,MAAjB,IAA2B,OAAOE,KAAP,KAAiB,QAAhD,EAA0D;AACxD,aAAOnC,IAAI,CAACY,KAAL,CAAWqB,MAAlB;AACD;;AACD,QAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAOnC,IAAI,CAACY,KAAL,CAAW2D,MAAlB;AACD;;AACD,QAAI,OAAOpC,KAAP,KAAiB,SAArB,EAAgC;AAC9B,aAAOnC,IAAI,CAACY,KAAL,CAAWgG,OAAlB;AACD;;AACD,QAAIzE,KAAK,YAAY8C,IAArB,EAA2B;AACzB,aAAOjF,IAAI,CAACY,KAAL,CAAWqE,IAAlB;AACD;;AACD,QAAI9C,KAAK,CAACJ,IAAN,IAAcI,KAAK,CAACH,SAAxB,EAAmC;AACjC,aAAOhC,IAAI,CAACY,KAAL,CAAWsB,SAAlB;AACD;;AACD,QAAIC,KAAK,CAACkB,OAAN,IAAiBlB,KAAK,CAAC2D,aAA3B,EAA0C;AACxC,aAAO9F,IAAI,CAACY,KAAL,CAAWiF,OAAlB;AACD;;AACD,QAAI1D,KAAK,CAACwC,QAAV,EAAoB;AAClB,aAAO3E,IAAI,CAACY,KAAL,CAAWmE,QAAlB;AACD;;AACD,QAAI5C,KAAK,CAACgF,YAAV,EAAwB;AACtB,aAAOnH,IAAI,CAACY,KAAL,CAAW8F,YAAlB;AACD;;AACD,QAAIvE,KAAK,CAAC2E,KAAV,EAAiB;AACf,aAAO9G,IAAI,CAACY,KAAL,CAAWR,KAAlB;AACD;;AACD,WAAOJ,IAAI,CAACY,KAAL,CAAWoG,IAAlB;AACD,GAjCW;AAmCZ;AACAI,EAAAA,KAAK,EAAE,CACL;AAACvC,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWC,IAAf;AAAqBwG,IAAAA,CAAC,EAAEjD;AAAxB,GADK,EAEL;AAACS,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAW2D,MAAf;AAAuB8C,IAAAA,CAAC,EAAE/C;AAA1B,GAFK,EAGL;AAACO,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWqB,MAAf;AAAuBoF,IAAAA,CAAC,EAAE7C;AAA1B,GAHK,EAIL;AAACK,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWqE,IAAf;AAAqBoC,IAAAA,CAAC,EAAErC;AAAxB,GAJK,EAKL;AAACH,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWsB,SAAf;AAA0BmF,IAAAA,CAAC,EAAElC;AAA7B,GALK,EAML;AAACN,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWiF,OAAf;AAAwBwB,IAAAA,CAAC,EAAEzB;AAA3B,GANK,EAOL;AAACf,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWgB,KAAf;AAAsByF,IAAAA,CAAC,EAAE7B;AAAzB,GAPK,EAQL;AAACX,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWoG,IAAf;AAAqBK,IAAAA,CAAC,EAAEN;AAAxB,GARK,EASL;AAAClC,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAW8F,YAAf;AAA6BW,IAAAA,CAAC,EAAEZ;AAAhC,GATK,EAUL;AAAC5B,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWmE,QAAf;AAAyBsC,IAAAA,CAAC,EAAE3C;AAA5B,GAVK,EAWL;AAACG,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWgG,OAAf;AAAwBS,IAAAA,CAAC,EAAEV;AAA3B,GAXK,EAYL;AAAC9B,IAAAA,CAAC,EAAE7E,IAAI,CAACY,KAAL,CAAWR,KAAf;AAAsBiH,IAAAA,CAAC,EAAER;AAAzB,GAZK,EAaLS,MAbK,CAaE,UAACC,CAAD,EAAI1C,CAAJ,EAAU;AACjB0C,IAAAA,CAAC,CAAC1C,CAAC,CAACA,CAAH,CAAD,GAASA,CAAC,CAACwC,CAAX;AACA,WAAOE,CAAP;AACD,GAhBM,EAgBJ,EAhBI,CApCK;AAsDZ5G,EAAAA,MAtDY,kBAsDLkB,IAtDK,EAsDCwC,IAtDD,EAsDOlC,KAtDP,EAsDc;AACxB,QAAMqF,CAAC,GAAG,KAAKJ,KAAL,CAAWvF,IAAX,CAAV;;AACA,QAAI,CAAC2F,CAAL,EAAQ;AACN,YAAM,IAAIpH,KAAJ,0CAA4CyB,IAA5C,EAAN;AACD;;AACD,WAAO,IAAI2F,CAAJ,CAAMnD,IAAN,EAAYlC,KAAZ,CAAP;AACD;AA5DW,CAAd;AA+DAsF,MAAM,CAACC,OAAP,GAAiB1H,IAAjB","sourcesContent":["'use strict';\r\n\r\nconst colCache = require('../utils/col-cache');\r\nconst _ = require('../utils/under-dash');\r\nconst Enums = require('./enums');\r\nconst {slideFormula} = require('../utils/shared-formula');\r\nconst Note = require('./note');\r\n// Cell requirements\r\n//  Operate inside a worksheet\r\n//  Store and retrieve a value with a range of types: text, number, date, hyperlink, reference, formula, etc.\r\n//  Manage/use and manipulate cell format either as local to cell or inherited from column or row.\r\n\r\nclass Cell {\r\n  constructor(row, column, address) {\r\n    if (!row || !column) {\r\n      throw new Error('A Cell needs a Row');\r\n    }\r\n\r\n    this._row = row;\r\n    this._column = column;\r\n\r\n    colCache.validateAddress(address);\r\n    this._address = address;\r\n\r\n    // TODO: lazy evaluation of this._value\r\n    this._value = Value.create(Cell.Types.Null, this);\r\n\r\n    this.style = this._mergeStyle(row.style, column.style, {});\r\n\r\n    this._mergeCount = 0;\r\n  }\r\n\r\n  get worksheet() {\r\n    return this._row.worksheet;\r\n  }\r\n\r\n  get workbook() {\r\n    return this._row.worksheet.workbook;\r\n  }\r\n\r\n  // help GC by removing cyclic (and other) references\r\n  destroy() {\r\n    delete this.style;\r\n    delete this._value;\r\n    delete this._row;\r\n    delete this._column;\r\n    delete this._address;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Styles stuff\r\n  get numFmt() {\r\n    return this.style.numFmt;\r\n  }\r\n\r\n  set numFmt(value) {\r\n    this.style.numFmt = value;\r\n  }\r\n\r\n  get font() {\r\n    return this.style.font;\r\n  }\r\n\r\n  set font(value) {\r\n    this.style.font = value;\r\n  }\r\n\r\n  get alignment() {\r\n    return this.style.alignment;\r\n  }\r\n\r\n  set alignment(value) {\r\n    this.style.alignment = value;\r\n  }\r\n\r\n  get border() {\r\n    return this.style.border;\r\n  }\r\n\r\n  set border(value) {\r\n    this.style.border = value;\r\n  }\r\n\r\n  get fill() {\r\n    return this.style.fill;\r\n  }\r\n\r\n  set fill(value) {\r\n    this.style.fill = value;\r\n  }\r\n\r\n  get protection() {\r\n    return this.style.protection;\r\n  }\r\n\r\n  set protection(value) {\r\n    this.style.protection = value;\r\n  }\r\n\r\n  _mergeStyle(rowStyle, colStyle, style) {\r\n    const numFmt = (rowStyle && rowStyle.numFmt) || (colStyle && colStyle.numFmt);\r\n    if (numFmt) style.numFmt = numFmt;\r\n\r\n    const font = (rowStyle && rowStyle.font) || (colStyle && colStyle.font);\r\n    if (font) style.font = font;\r\n\r\n    const alignment = (rowStyle && rowStyle.alignment) || (colStyle && colStyle.alignment);\r\n    if (alignment) style.alignment = alignment;\r\n\r\n    const border = (rowStyle && rowStyle.border) || (colStyle && colStyle.border);\r\n    if (border) style.border = border;\r\n\r\n    const fill = (rowStyle && rowStyle.fill) || (colStyle && colStyle.fill);\r\n    if (fill) style.fill = fill;\r\n\r\n    const protection = (rowStyle && rowStyle.protection) || (colStyle && colStyle.protection);\r\n    if (protection) style.protection = protection;\r\n\r\n    return style;\r\n  }\r\n\r\n  // =========================================================================\r\n  // return the address for this cell\r\n  get address() {\r\n    return this._address;\r\n  }\r\n\r\n  get row() {\r\n    return this._row.number;\r\n  }\r\n\r\n  get col() {\r\n    return this._column.number;\r\n  }\r\n\r\n  get $col$row() {\r\n    return `$${this._column.letter}$${this.row}`;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Value stuff\r\n\r\n  get type() {\r\n    return this._value.type;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return this._value.effectiveType;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this._value.toCsvString();\r\n  }\r\n\r\n  // =========================================================================\r\n  // Merge stuff\r\n\r\n  addMergeRef() {\r\n    this._mergeCount++;\r\n  }\r\n\r\n  releaseMergeRef() {\r\n    this._mergeCount--;\r\n  }\r\n\r\n  get isMerged() {\r\n    return (this._mergeCount > 0) || (this.type === Cell.Types.Merge);\r\n  }\r\n\r\n  merge(master) {\r\n    this._value.release();\r\n    this._value = Value.create(Cell.Types.Merge, this, master);\r\n    this.style = master.style;\r\n  }\r\n\r\n  unmerge() {\r\n    if (this.type === Cell.Types.Merge) {\r\n      this._value.release();\r\n      this._value = Value.create(Cell.Types.Null, this);\r\n      this.style = this._mergeStyle(this._row.style, this._column.style, {});\r\n    }\r\n  }\r\n\r\n  isMergedTo(master) {\r\n    if (this._value.type !== Cell.Types.Merge) return false;\r\n    return this._value.isMergedTo(master);\r\n  }\r\n\r\n  get master() {\r\n    if (this.type === Cell.Types.Merge) {\r\n      return this._value.master;\r\n    }\r\n    return this; // an unmerged cell is its own master\r\n  }\r\n\r\n  get isHyperlink() {\r\n    return this._value.type === Cell.Types.Hyperlink;\r\n  }\r\n\r\n  get hyperlink() {\r\n    return this._value.hyperlink;\r\n  }\r\n\r\n  // return the value\r\n  get value() {\r\n    return this._value.value;\r\n  }\r\n\r\n  // set the value - can be number, string or raw\r\n  set value(v) {\r\n    // special case - merge cells set their master's value\r\n    if (this.type === Cell.Types.Merge) {\r\n      this._value.master.value = v;\r\n      return;\r\n    }\r\n\r\n    this._value.release();\r\n\r\n    // assign value\r\n    this._value = Value.create(Value.getType(v), this, v);\r\n  }\r\n\r\n  get note() {\r\n    return this._comment && this._comment.note;\r\n  }\r\n\r\n  set note(note) {\r\n    this._comment = new Note(note);\r\n  }\r\n\r\n  get text() {\r\n    return this._value.toString();\r\n  }\r\n\r\n  get html() {\r\n    return _.escapeHtml(this.text);\r\n  }\r\n\r\n  toString() {\r\n    return this.text;\r\n  }\r\n\r\n  _upgradeToHyperlink(hyperlink) {\r\n    // if this cell is a string, turn it into a Hyperlink\r\n    if (this.type === Cell.Types.String) {\r\n      this._value = Value.create(Cell.Types.Hyperlink, this, {\r\n        text: this._value.value,\r\n        hyperlink,\r\n      });\r\n    }\r\n  }\r\n\r\n  // =========================================================================\r\n  // Formula stuff\r\n  get formula() {\r\n    return this._value.formula;\r\n  }\r\n\r\n  get result() {\r\n    return this._value.result;\r\n  }\r\n\r\n  get formulaType() {\r\n    return this._value.formulaType;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Name stuff\r\n  get fullAddress() {\r\n    const {worksheet} = this._row;\r\n    return {\r\n      sheetName: worksheet.name,\r\n      address: this.address,\r\n      row: this.row,\r\n      col: this.col,\r\n    };\r\n  }\r\n\r\n  get name() {\r\n    return this.names[0];\r\n  }\r\n\r\n  set name(value) {\r\n    this.names = [value];\r\n  }\r\n\r\n  get names() {\r\n    return this.workbook.definedNames.getNamesEx(this.fullAddress);\r\n  }\r\n\r\n  set names(value) {\r\n    const {definedNames} = this.workbook;\r\n    definedNames.removeAllNames(this.fullAddress);\r\n    value.forEach(name => {\r\n      definedNames.addEx(this.fullAddress, name);\r\n    });\r\n  }\r\n\r\n  addName(name) {\r\n    this.workbook.definedNames.addEx(this.fullAddress, name);\r\n  }\r\n\r\n  removeName(name) {\r\n    this.workbook.definedNames.removeEx(this.fullAddress, name);\r\n  }\r\n\r\n  removeAllNames() {\r\n    this.workbook.definedNames.removeAllNames(this.fullAddress);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Data Validation stuff\r\n  get _dataValidations() {\r\n    return this.worksheet.dataValidations;\r\n  }\r\n\r\n  get dataValidation() {\r\n    return this._dataValidations.find(this.address);\r\n  }\r\n\r\n  set dataValidation(value) {\r\n    this._dataValidations.add(this.address, value);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Model stuff\r\n\r\n  get model() {\r\n    const {model} = this._value;\r\n    model.style = this.style;\r\n    if (this._comment){\r\n      model.comment = this._comment.model;\r\n    }\r\n    return model;\r\n  }\r\n\r\n  set model(value) {\r\n    this._value.release();\r\n    this._value = Value.create(value.type, this);\r\n    this._value.model = value;\r\n\r\n    if (value.comment) {\r\n      switch (value.comment.type) {\r\n        case 'note':\r\n          this._comment = new Note(value.comment.note);\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (value.style) {\r\n      this.style = value.style;\r\n    } else {\r\n      this.style = {};\r\n    }\r\n  }\r\n}\r\nCell.Types = Enums.ValueType;\r\n\r\n// =============================================================================\r\n// Internal Value Types\r\n\r\nclass NullValue {\r\n  constructor(cell) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Null,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return null;\r\n  }\r\n\r\n  set value(value) {\r\n    // nothing to do\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Null;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Null;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return '';\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return '';\r\n  }\r\n}\r\n\r\nclass NumberValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Number,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Number;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Number;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value.toString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass StringValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.String,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return `\"${this.model.value.replace(/\"/g, '\"\"')}\"`;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value;\r\n  }\r\n}\r\n\r\nclass RichTextValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.String,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  toString() {\r\n    return this.model.value.richText.map(t => t.text).join('');\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.RichText;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.RichText;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return `\"${this.text.replace(/\"/g, '\"\"')}\"`;\r\n  }\r\n\r\n  release() {}\r\n}\r\n\r\nclass DateValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Date,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Date;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Date;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value.toISOString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass HyperlinkValue {\r\n  constructor(cell, value) {\r\n    this.model = Object.assign(\r\n      {\r\n        address: cell.address,\r\n        type: Cell.Types.Hyperlink,\r\n        text: value ? value.text : undefined,\r\n        hyperlink: value ? value.hyperlink : undefined,\r\n      },\r\n      value && value.tooltip ? {tooltip: value.tooltip} : {}\r\n    );\r\n  }\r\n\r\n  get value() {\r\n    return Object.assign(\r\n      {\r\n        text: this.model.text,\r\n        hyperlink: this.model.hyperlink,\r\n      },\r\n      this.model.tooltip ? {tooltip: this.model.tooltip} : {}\r\n    );\r\n  }\r\n\r\n  set value(value) {\r\n    this.model = Object.assign(\r\n      {\r\n        text: value.text,\r\n        hyperlink: value.hyperlink,\r\n      },\r\n      value && value.tooltip ? {tooltip: value.tooltip} : {}\r\n    );\r\n  }\r\n\r\n  get text() {\r\n    return this.model.text;\r\n  }\r\n\r\n  set text(value) {\r\n    this.model.text = value;\r\n  }\r\n\r\n  /*\r\n  get tooltip() {\r\n    return this.model.tooltip;\r\n  }\r\n\r\n  set tooltip(value) {\r\n    this.model.tooltip = value;\r\n  } */\r\n\r\n  get hyperlink() {\r\n    return this.model.hyperlink;\r\n  }\r\n\r\n  set hyperlink(value) {\r\n    this.model.hyperlink = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Hyperlink;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Hyperlink;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.hyperlink;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.text;\r\n  }\r\n}\r\n\r\nclass MergeValue {\r\n  constructor(cell, master) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Merge,\r\n      master: master ? master.address : undefined,\r\n    };\r\n    this._master = master;\r\n    if (master) {\r\n      master.addMergeRef();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this._master.value;\r\n  }\r\n\r\n  set value(value) {\r\n    if (value instanceof Cell) {\r\n      if (this._master) {\r\n        this._master.releaseMergeRef();\r\n      }\r\n      value.addMergeRef();\r\n      this._master = value;\r\n    } else {\r\n      this._master.value = value;\r\n    }\r\n  }\r\n\r\n  isMergedTo(master) {\r\n    return master === this._master;\r\n  }\r\n\r\n  get master() {\r\n    return this._master;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Merge;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return this._master.effectiveType;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return '';\r\n  }\r\n\r\n  release() {\r\n    this._master.releaseMergeRef();\r\n  }\r\n\r\n  toString() {\r\n    return this.value.toString();\r\n  }\r\n}\r\n\r\nclass FormulaValue {\r\n  constructor(cell, value) {\r\n    this.cell = cell;\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Formula,\r\n      formula: value ? value.formula : undefined,\r\n      sharedFormula: value ? value.sharedFormula : undefined,\r\n      result: value ? value.result : undefined,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.formula\r\n      ? {\r\n          formula: this.model.formula,\r\n          result: this.model.result,\r\n        }\r\n      : {\r\n          sharedFormula: this.model.sharedFormula,\r\n          result: this.model.result,\r\n        };\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.formula = value.formula;\r\n    this.model.sharedFormula = value.sharedFormula;\r\n    this.model.result = value.result;\r\n  }\r\n\r\n  validate(value) {\r\n    switch (Value.getType(value)) {\r\n      case Cell.Types.Null:\r\n      case Cell.Types.String:\r\n      case Cell.Types.Number:\r\n      case Cell.Types.Date:\r\n        break;\r\n      case Cell.Types.Hyperlink:\r\n      case Cell.Types.Formula:\r\n      default:\r\n        throw new Error('Cannot process that type of result value');\r\n    }\r\n  }\r\n\r\n  get dependencies() {\r\n    // find all the ranges and cells mentioned in the formula\r\n    const ranges = this.formula\r\n      .match(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}:[A-Z]{1,3}\\d{1,4}/g);\r\n    const cells = this.formula\r\n      .replace(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}:[A-Z]{1,3}\\d{1,4}/g, '')\r\n      .match(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}/g);\r\n    return {\r\n      ranges,\r\n      cells,\r\n    };\r\n  }\r\n\r\n  get formula() {\r\n    return this.model.formula ||\r\n      this._getTranslatedFormula();\r\n  }\r\n\r\n  set formula(value) {\r\n    this.model.formula = value;\r\n  }\r\n\r\n  get formulaType() {\r\n    if (this.model.formula) {\r\n      return Enums.FormulaType.Master;\r\n    }\r\n    if (this.model.sharedFormula) {\r\n      return Enums.FormulaType.Shared;\r\n    }\r\n    return Enums.FormulaType.None;\r\n  }\r\n\r\n  get result() {\r\n    return this.model.result;\r\n  }\r\n\r\n  set result(value) {\r\n    this.model.result = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Formula;\r\n  }\r\n\r\n  get effectiveType() {\r\n    const v = this.model.result;\r\n    if ((v === null) || (v === undefined)) {\r\n      return Enums.ValueType.Null;\r\n    }\r\n    if (v instanceof String || typeof v === 'string') {\r\n      return Enums.ValueType.String;\r\n    }\r\n    if (typeof v === 'number') {\r\n      return Enums.ValueType.Number;\r\n    }\r\n    if (v instanceof Date) {\r\n      return Enums.ValueType.Date;\r\n    }\r\n    if (v.text && v.hyperlink) {\r\n      return Enums.ValueType.Hyperlink;\r\n    }\r\n    if (v.formula) {\r\n      return Enums.ValueType.Formula;\r\n    }\r\n\r\n    return Enums.ValueType.Null;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  _getTranslatedFormula() {\r\n    if (!this._translatedFormula && this.model.sharedFormula) {\r\n      const {worksheet} = this.cell;\r\n      const master = worksheet.findCell(this.model.sharedFormula);\r\n      this._translatedFormula = master &&\r\n        slideFormula(master.formula, master.address, this.model.address);\r\n    }\r\n    return this._translatedFormula;\r\n  }\r\n\r\n  toCsvString() {\r\n    return `${this.model.result || ''}`;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.result ? this.model.result.toString() : '';\r\n  }\r\n}\r\n\r\nclass SharedStringValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.SharedString,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.SharedString;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.SharedString;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value.toString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass BooleanValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Boolean,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Boolean;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Boolean;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value ? 1 : 0;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass ErrorValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Error,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Error;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Error;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.toString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.error.toString();\r\n  }\r\n}\r\n\r\nclass JSONValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.String,\r\n      value: JSON.stringify(value),\r\n      rawValue: value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.rawValue;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.rawValue = value;\r\n    this.model.value = JSON.stringify(value);\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value;\r\n  }\r\n}\r\n\r\n// Value is a place to hold common static Value type functions\r\nconst Value = {\r\n  getType(value) {\r\n    if ((value === null) || (value === undefined)) {\r\n      return Cell.Types.Null;\r\n    }\r\n    if (value instanceof String || typeof value === 'string') {\r\n      return Cell.Types.String;\r\n    }\r\n    if (typeof value === 'number') {\r\n      return Cell.Types.Number;\r\n    }\r\n    if (typeof value === 'boolean') {\r\n      return Cell.Types.Boolean;\r\n    }\r\n    if (value instanceof Date) {\r\n      return Cell.Types.Date;\r\n    }\r\n    if (value.text && value.hyperlink) {\r\n      return Cell.Types.Hyperlink;\r\n    }\r\n    if (value.formula || value.sharedFormula) {\r\n      return Cell.Types.Formula;\r\n    }\r\n    if (value.richText) {\r\n      return Cell.Types.RichText;\r\n    }\r\n    if (value.sharedString) {\r\n      return Cell.Types.SharedString;\r\n    }\r\n    if (value.error) {\r\n      return Cell.Types.Error;\r\n    }\r\n    return Cell.Types.JSON;\r\n  },\r\n\r\n  // map valueType to constructor\r\n  types: [\r\n    {t: Cell.Types.Null, f: NullValue},\r\n    {t: Cell.Types.Number, f: NumberValue},\r\n    {t: Cell.Types.String, f: StringValue},\r\n    {t: Cell.Types.Date, f: DateValue},\r\n    {t: Cell.Types.Hyperlink, f: HyperlinkValue},\r\n    {t: Cell.Types.Formula, f: FormulaValue},\r\n    {t: Cell.Types.Merge, f: MergeValue},\r\n    {t: Cell.Types.JSON, f: JSONValue},\r\n    {t: Cell.Types.SharedString, f: SharedStringValue},\r\n    {t: Cell.Types.RichText, f: RichTextValue},\r\n    {t: Cell.Types.Boolean, f: BooleanValue},\r\n    {t: Cell.Types.Error, f: ErrorValue},\r\n  ].reduce((p, t) => {\r\n    p[t.t] = t.f;\r\n    return p;\r\n  }, []),\r\n\r\n  create(type, cell, value) {\r\n    const T = this.types[type];\r\n    if (!T) {\r\n      throw new Error(`Could not create Value of type ${type}`);\r\n    }\r\n    return new T(cell, value);\r\n  },\r\n};\r\n\r\nmodule.exports = Cell;\r\n"],"file":"cell.js"}