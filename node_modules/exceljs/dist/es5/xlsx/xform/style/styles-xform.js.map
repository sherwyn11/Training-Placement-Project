{"version":3,"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"names":["Enums","require","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","DxfXform","NUMFMT_BASE","StylesXform","initialise","map","numFmts","tag","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","numFmt","font","fill","border","style","cellStyles","STATIC_XFORMS","tableStyles","extLst","init","index","numFmtNextId","model","styles","initIndex","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","xmlStream","openXml","StdDocAttributes","openNode","STYLESHEET_ATTRIBUTES","length","forEach","numFmtXml","writeXml","closeNode","_addFont","size","color","theme","name","family","scheme","fontXml","fillXml","borderXml","render","styleXml","node","parser","parseOpen","text","parseText","parseClose","undefined","add","propName","xform","numFmtIndex","id","formatCode","cellType","weakMap","has","get","ValueType","Number","_addNumFmtStr","Date","alignment","protection","styleId","set","getDefaultFmtCode","addStyle","group","part","push","xml","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"mappings":"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","sourcesContent":["const Enums = require('../../../doc/enums');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst StaticXform = require('../static-xform');\r\nconst ListXform = require('../list-xform');\r\nconst FontXform = require('./font-xform');\r\nconst FillXform = require('./fill-xform');\r\nconst BorderXform = require('./border-xform');\r\nconst NumFmtXform = require('./numfmt-xform');\r\nconst StyleXform = require('./style-xform');\r\nconst DxfXform = require('./dxf-xform');\r\n\r\n// custom numfmt ids start here\r\nconst NUMFMT_BASE = 164;\r\n\r\n// =============================================================================\r\n// StylesXform is used to generate and parse the styles.xml file\r\n// it manages the collections of fonts, number formats, alignments, etc\r\nclass StylesXform extends BaseXform {\r\n  constructor(initialise) {\r\n    super();\r\n\r\n    this.map = {\r\n      numFmts: new ListXform({tag: 'numFmts', count: true, childXform: new NumFmtXform()}),\r\n      fonts: new ListXform({tag: 'fonts', count: true, childXform: new FontXform(), $: {'x14ac:knownFonts': 1}}),\r\n      fills: new ListXform({tag: 'fills', count: true, childXform: new FillXform()}),\r\n      borders: new ListXform({tag: 'borders', count: true, childXform: new BorderXform()}),\r\n      cellStyleXfs: new ListXform({tag: 'cellStyleXfs', count: true, childXform: new StyleXform()}),\r\n      cellXfs: new ListXform({tag: 'cellXfs', count: true, childXform: new StyleXform({xfId: true})}),\r\n      dxfs: new ListXform({tag: 'dxfs', always: true, count: true, childXform: new DxfXform()}),\r\n\r\n      // for style manager\r\n      numFmt: new NumFmtXform(),\r\n      font: new FontXform(),\r\n      fill: new FillXform(),\r\n      border: new BorderXform(),\r\n      style: new StyleXform({xfId: true}),\r\n\r\n      cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\r\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\r\n      extLst: StylesXform.STATIC_XFORMS.extLst,\r\n    };\r\n\r\n    if (initialise) {\r\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  initIndex() {\r\n    this.index = {\r\n      style: {},\r\n      numFmt: {},\r\n      numFmtNextId: 164, // start custom format ids here\r\n      font: {},\r\n      border: {},\r\n      fill: {},\r\n    };\r\n  }\r\n\r\n  init() {\r\n    // Prepare for Style Manager role\r\n    this.model = {\r\n      styles: [],\r\n      numFmts: [],\r\n      fonts: [],\r\n      borders: [],\r\n      fills: [],\r\n      dxfs: [],\r\n    };\r\n\r\n    this.initIndex();\r\n\r\n    // default (zero) border\r\n    this._addBorder({});\r\n\r\n    // add default (all zero) style\r\n    this._addStyle({numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0});\r\n\r\n    // add default fills\r\n    this._addFill({type: 'pattern', pattern: 'none'});\r\n    this._addFill({type: 'pattern', pattern: 'gray125'});\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    model = model || this.model;\r\n    //\r\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n\r\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\r\n\r\n    if (this.index) {\r\n      // model has been built by style manager role (contains xml)\r\n      if (model.numFmts && model.numFmts.length) {\r\n        xmlStream.openNode('numFmts', {count: model.numFmts.length});\r\n        model.numFmts.forEach(numFmtXml => {\r\n          xmlStream.writeXml(numFmtXml);\r\n        });\r\n        xmlStream.closeNode();\r\n      }\r\n\r\n      if (!model.fonts.length) {\r\n        // default (zero) font\r\n        this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\r\n      }\r\n      xmlStream.openNode('fonts', {count: model.fonts.length, 'x14ac:knownFonts': 1});\r\n      model.fonts.forEach(fontXml => {\r\n        xmlStream.writeXml(fontXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      xmlStream.openNode('fills', {count: model.fills.length});\r\n      model.fills.forEach(fillXml => {\r\n        xmlStream.writeXml(fillXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      xmlStream.openNode('borders', {count: model.borders.length});\r\n      model.borders.forEach(borderXml => {\r\n        xmlStream.writeXml(borderXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\r\n\r\n      xmlStream.openNode('cellXfs', {count: model.styles.length});\r\n      model.styles.forEach(styleXml => {\r\n        xmlStream.writeXml(styleXml);\r\n      });\r\n      xmlStream.closeNode();\r\n    } else {\r\n      // model is plain JSON and needs to be xformed\r\n      this.map.numFmts.render(xmlStream, model.numFmts);\r\n      this.map.fonts.render(xmlStream, model.fonts);\r\n      this.map.fills.render(xmlStream, model.fills);\r\n      this.map.borders.render(xmlStream, model.borders);\r\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\r\n      this.map.cellXfs.render(xmlStream, model.styles);\r\n    }\r\n\r\n    StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\r\n\r\n    this.map.dxfs.render(xmlStream, model.dxfs);\r\n\r\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\r\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'styleSheet':\r\n        this.initIndex();\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        return true;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'styleSheet': {\r\n        this.model = {};\r\n        const add = (propName, xform) => {\r\n          if (xform.model && xform.model.length) {\r\n            this.model[propName] = xform.model;\r\n          }\r\n        };\r\n        add('numFmts', this.map.numFmts);\r\n        add('fonts', this.map.fonts);\r\n        add('fills', this.map.fills);\r\n        add('borders', this.map.borders);\r\n        add('styles', this.map.cellXfs);\r\n        add('dxfs', this.map.dxfs);\r\n\r\n        // index numFmts\r\n        this.index = {\r\n          model: [],\r\n          numFmt: [],\r\n        };\r\n        if (this.model.numFmts) {\r\n          const numFmtIndex = this.index.numFmt;\r\n          this.model.numFmts.forEach(numFmt => {\r\n            numFmtIndex[numFmt.id] = numFmt.formatCode;\r\n          });\r\n        }\r\n\r\n        return false;\r\n      }\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n\r\n  // add a cell's style model to the collection\r\n  // each style property is processed and cross-referenced, etc.\r\n  // the styleId is returned. Note: cellType is used when numFmt not defined\r\n  addStyleModel(model, cellType) {\r\n    if (!model) {\r\n      return 0;\r\n    }\r\n\r\n    // if we have no default font, add it here now\r\n    if (!this.model.fonts.length) {\r\n      // default (zero) font\r\n      this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\r\n    }\r\n\r\n    // if we have seen this style object before, assume it has the same styleId\r\n    if (this.weakMap && this.weakMap.has(model)) {\r\n      return this.weakMap.get(model);\r\n    }\r\n\r\n    const style = {};\r\n    cellType = cellType || Enums.ValueType.Number;\r\n\r\n    if (model.numFmt) {\r\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\r\n    } else {\r\n      switch (cellType) {\r\n        case Enums.ValueType.Number:\r\n          style.numFmtId = this._addNumFmtStr('General');\r\n          break;\r\n        case Enums.ValueType.Date:\r\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (model.font) {\r\n      style.fontId = this._addFont(model.font);\r\n    }\r\n\r\n    if (model.border) {\r\n      style.borderId = this._addBorder(model.border);\r\n    }\r\n\r\n    if (model.fill) {\r\n      style.fillId = this._addFill(model.fill);\r\n    }\r\n\r\n    if (model.alignment) {\r\n      style.alignment = model.alignment;\r\n    }\r\n\r\n    if (model.protection) {\r\n      style.protection = model.protection;\r\n    }\r\n\r\n    const styleId = this._addStyle(style);\r\n    if (this.weakMap) {\r\n      this.weakMap.set(model, styleId);\r\n    }\r\n    return styleId;\r\n  }\r\n\r\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\r\n  // objects are shared where possible.\r\n  getStyleModel(id) {\r\n    // if the style doesn't exist return null\r\n    const style = this.model.styles[id];\r\n    if (!style) return null;\r\n\r\n    // have we built this model before?\r\n    let model = this.index.model[id];\r\n    if (model) return model;\r\n\r\n    // build a new model\r\n    model = this.index.model[id] = {};\r\n\r\n    // -------------------------------------------------------\r\n    // number format\r\n    if (style.numFmtId) {\r\n      const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\r\n      if (numFmt) {\r\n        model.numFmt = numFmt;\r\n      }\r\n    }\r\n\r\n    function addStyle(name, group, styleId) {\r\n      if (styleId || styleId === 0) {\r\n        const part = group[styleId];\r\n        if (part) {\r\n          model[name] = part;\r\n        }\r\n      }\r\n    }\r\n\r\n    addStyle('font', this.model.fonts, style.fontId);\r\n    addStyle('border', this.model.borders, style.borderId);\r\n    addStyle('fill', this.model.fills, style.fillId);\r\n\r\n    // -------------------------------------------------------\r\n    // alignment\r\n    if (style.alignment) {\r\n      model.alignment = style.alignment;\r\n    }\r\n\r\n    // -------------------------------------------------------\r\n    // protection\r\n    if (style.protection) {\r\n      model.protection = style.protection;\r\n    }\r\n\r\n    return model;\r\n  }\r\n\r\n  addDxfStyle(style) {\r\n    this.model.dxfs.push(style);\r\n    return this.model.dxfs.length - 1;\r\n  }\r\n\r\n  getDxfStyle(id) {\r\n    return this.model.dxfs[id];\r\n  }\r\n\r\n  // =========================================================================\r\n  // Private Interface\r\n  _addStyle(style) {\r\n    const xml = this.map.style.toXml(style);\r\n    let index = this.index.style[xml];\r\n    if (index === undefined) {\r\n      index = this.index.style[xml] = this.model.styles.length;\r\n      this.model.styles.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Number Formats\r\n  _addNumFmtStr(formatCode) {\r\n    // check if default format\r\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\r\n    if (index !== undefined) return index;\r\n\r\n    // check if already in\r\n    index = this.index.numFmt[formatCode];\r\n    if (index !== undefined) return index;\r\n\r\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\r\n    const xml = this.map.numFmt.toXml({id: index, formatCode});\r\n    this.model.numFmts.push(xml);\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Fonts\r\n  _addFont(font) {\r\n    const xml = this.map.font.toXml(font);\r\n    let index = this.index.font[xml];\r\n    if (index === undefined) {\r\n      index = this.index.font[xml] = this.model.fonts.length;\r\n      this.model.fonts.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Borders\r\n  _addBorder(border) {\r\n    const xml = this.map.border.toXml(border);\r\n    let index = this.index.border[xml];\r\n    if (index === undefined) {\r\n      index = this.index.border[xml] = this.model.borders.length;\r\n      this.model.borders.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Fills\r\n  _addFill(fill) {\r\n    const xml = this.map.fill.toXml(fill);\r\n    let index = this.index.fill[xml];\r\n    if (index === undefined) {\r\n      index = this.index.fill[xml] = this.model.fills.length;\r\n      this.model.fills.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n}\r\n\r\nStylesXform.STYLESHEET_ATTRIBUTES = {\r\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\r\n  'mc:Ignorable': 'x14ac x16r2',\r\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\r\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\r\n};\r\nStylesXform.STATIC_XFORMS = {\r\n  cellStyles: new StaticXform({tag: 'cellStyles', $: {count: 1}, c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}]}),\r\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\r\n  tableStyles: new StaticXform({tag: 'tableStyles', $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'}}),\r\n  extLst: new StaticXform({\r\n    tag: 'extLst',\r\n    c: [\r\n      {\r\n        tag: 'ext',\r\n        $: {uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}', 'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main'},\r\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\r\n      },\r\n      {\r\n        tag: 'ext',\r\n        $: {uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}', 'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main'},\r\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\r\n      },\r\n    ],\r\n  }),\r\n};\r\n\r\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\r\nclass StylesXformMock extends StylesXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.model = {\r\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\r\n      numFmts: [],\r\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\r\n      borders: [{}],\r\n      fills: [{type: 'pattern', pattern: 'none'}, {type: 'pattern', pattern: 'gray125'}],\r\n    };\r\n  }\r\n\r\n  // =========================================================================\r\n  // Style Manager Interface\r\n\r\n  // override normal behaviour - consume and dispose\r\n  parseStream(stream) {\r\n    stream.autodrain();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  // add a cell's style model to the collection\r\n  // each style property is processed and cross-referenced, etc.\r\n  // the styleId is returned. Note: cellType is used when numFmt not defined\r\n  addStyleModel(model, cellType) {\r\n    switch (cellType) {\r\n      case Enums.ValueType.Date:\r\n        return this.dateStyleId;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  get dateStyleId() {\r\n    if (!this._dateStyleId) {\r\n      const dateStyle = {\r\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\r\n      };\r\n      this._dateStyleId = this.model.styles.length;\r\n      this.model.styles.push(dateStyle);\r\n    }\r\n    return this._dateStyleId;\r\n  }\r\n\r\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\r\n  // objects are shared where possible.\r\n  getStyleModel(/* id */) {\r\n    return {};\r\n  }\r\n}\r\n\r\nStylesXform.Mock = StylesXformMock;\r\n\r\nmodule.exports = StylesXform;\r\n"],"file":"styles-xform.js"}