{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/worksheet-xform.js"],"names":["_","require","colCache","XmlStream","RelType","Merges","BaseXform","ListXform","RowXform","ColXform","DimensionXform","HyperlinkXform","MergeCellXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","SheetViewXform","SheetProtectionXform","PageMarginsXform","PageSetupXform","PrintOptionsXform","AutoFilterXform","PictureXform","DrawingXform","TablePartXform","RowBreaksXform","HeaderFooterXform","WorkSheetXform","options","maxRows","maxCols","map","sheetPr","dimension","sheetViews","tag","count","childXform","sheetFormatPr","cols","sheetData","empty","maxItems","autoFilter","mergeCells","rowBreaks","hyperlinks","pageMargins","dataValidations","pageSetup","headerFooter","printOptions","picture","drawing","sheetProtection","tableParts","model","merges","comments","formulae","siFormulae","prepare","rows","rels","nextRid","r","length","forEach","hyperlink","rId","push","Id","Type","Hyperlink","Target","target","TargetMode","comment","Comments","id","vmlDrawing","VmlDrawing","item","refAddress","decodeAddress","ref","commentRefs","commentName","drawingRelsHash","bookImage","media","medium","type","imageId","Image","name","extension","background","image","drawingsCount","anchors","drawings","rIdImage","range","tables","table","Table","columns","column","style","dxfId","styles","addDxfStyle","xmlStream","openXml","StdDocAttributes","openNode","WORKSHEET_ATTRIBUTES","sheetFormatPropertiesModel","properties","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","undefined","sheetPropertiesModel","outlineProperties","tabColor","fitToPage","pageMarginsModel","margins","printOptionsModel","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","sheetProtectionModel","render","dimensions","views","rel","leafNode","closeNode","node","parser","parseOpen","each","xform","reset","text","parseText","parseClose","outlinePropertiesx","sheetProperties","Object","assign","relationships","reduce","h","commentsMap","hyperlinkMap","address","filter","Boolean","row","cells","reconcile","drawingRel","match","drawingName","anchor","index","backgroundRel","split","mediaIndex","tablePart","xmlns","module","exports"],"mappings":"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","sourcesContent":["const _ = require('../../../utils/under-dash');\r\n\r\nconst colCache = require('../../../utils/col-cache');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst RelType = require('../../rel-type');\r\n\r\nconst Merges = require('./merges');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst ListXform = require('../list-xform');\r\nconst RowXform = require('./row-xform');\r\nconst ColXform = require('./col-xform');\r\nconst DimensionXform = require('./dimension-xform');\r\nconst HyperlinkXform = require('./hyperlink-xform');\r\nconst MergeCellXform = require('./merge-cell-xform');\r\nconst DataValidationsXform = require('./data-validations-xform');\r\nconst SheetPropertiesXform = require('./sheet-properties-xform');\r\nconst SheetFormatPropertiesXform = require('./sheet-format-properties-xform');\r\nconst SheetViewXform = require('./sheet-view-xform');\r\nconst SheetProtectionXform = require('./sheet-protection-xform');\r\nconst PageMarginsXform = require('./page-margins-xform');\r\nconst PageSetupXform = require('./page-setup-xform');\r\nconst PrintOptionsXform = require('./print-options-xform');\r\nconst AutoFilterXform = require('./auto-filter-xform');\r\nconst PictureXform = require('./picture-xform');\r\nconst DrawingXform = require('./drawing-xform');\r\nconst TablePartXform = require('./table-part-xform');\r\nconst RowBreaksXform = require('./row-breaks-xform');\r\nconst HeaderFooterXform = require('./header-footer-xform');\r\n\r\nclass WorkSheetXform extends BaseXform {\r\n  constructor(options) {\r\n    super();\r\n\r\n    const {maxRows, maxCols} = options || {};\r\n    this.map = {\r\n      sheetPr: new SheetPropertiesXform(),\r\n      dimension: new DimensionXform(),\r\n      sheetViews: new ListXform({tag: 'sheetViews', count: false, childXform: new SheetViewXform()}),\r\n      sheetFormatPr: new SheetFormatPropertiesXform(),\r\n      cols: new ListXform({tag: 'cols', count: false, childXform: new ColXform()}),\r\n      sheetData: new ListXform({\r\n        tag: 'sheetData',\r\n        count: false,\r\n        empty: true,\r\n        childXform: new RowXform({maxItems: maxCols}),\r\n        maxItems: maxRows,\r\n      }),\r\n      autoFilter: new AutoFilterXform(),\r\n      mergeCells: new ListXform({tag: 'mergeCells', count: true, childXform: new MergeCellXform()}),\r\n      rowBreaks: new RowBreaksXform(),\r\n      hyperlinks: new ListXform({tag: 'hyperlinks', count: false, childXform: new HyperlinkXform()}),\r\n      pageMargins: new PageMarginsXform(),\r\n      dataValidations: new DataValidationsXform(),\r\n      pageSetup: new PageSetupXform(),\r\n      headerFooter: new HeaderFooterXform(),\r\n      printOptions: new PrintOptionsXform(),\r\n      picture: new PictureXform(),\r\n      drawing: new DrawingXform(),\r\n      sheetProtection: new SheetProtectionXform(),\r\n      tableParts: new ListXform({tag: 'tableParts', count: true, childXform: new TablePartXform()}),\r\n    };\r\n  }\r\n\r\n  prepare(model, options) {\r\n    options.merges = new Merges();\r\n    model.hyperlinks = options.hyperlinks = [];\r\n    model.comments = options.comments = [];\r\n\r\n    options.formulae = {};\r\n    options.siFormulae = 0;\r\n    this.map.cols.prepare(model.cols, options);\r\n    this.map.sheetData.prepare(model.rows, options);\r\n\r\n    model.mergeCells = options.merges.mergeCells;\r\n\r\n    // prepare relationships\r\n    const rels = (model.rels = []);\r\n\r\n    function nextRid(r) {\r\n      return `rId${r.length + 1}`;\r\n    }\r\n\r\n    model.hyperlinks.forEach(hyperlink => {\r\n      const rId = nextRid(rels);\r\n      hyperlink.rId = rId;\r\n      rels.push({\r\n        Id: rId,\r\n        Type: RelType.Hyperlink,\r\n        Target: hyperlink.target,\r\n        TargetMode: 'External',\r\n      });\r\n    });\r\n\r\n    // prepare comment relationships\r\n    if (model.comments.length > 0) {\r\n      const comment = {\r\n        Id: nextRid(rels),\r\n        Type: RelType.Comments,\r\n        Target: `../comments${model.id}.xml`,\r\n      };\r\n      rels.push(comment);\r\n      const vmlDrawing = {\r\n        Id: nextRid(rels),\r\n        Type: RelType.VmlDrawing,\r\n        Target: `../drawings/vmlDrawing${model.id}.vml`,\r\n      };\r\n      rels.push(vmlDrawing);\r\n\r\n      model.comments.forEach(item => {\r\n        item.refAddress = colCache.decodeAddress(item.ref);\r\n      });\r\n\r\n      options.commentRefs.push({\r\n        commentName: `comments${model.id}`,\r\n        vmlDrawing: `vmlDrawing${model.id}`,\r\n      });\r\n    }\r\n\r\n    const drawingRelsHash = [];\r\n    let bookImage;\r\n    model.media.forEach(medium => {\r\n      if (medium.type === 'background') {\r\n        const rId = nextRid(rels);\r\n        bookImage = options.media[medium.imageId];\r\n        rels.push({\r\n          Id: rId,\r\n          Type: RelType.Image,\r\n          Target: `../media/${bookImage.name}.${bookImage.extension}`,\r\n        });\r\n        model.background = {\r\n          rId,\r\n        };\r\n        model.image = options.media[medium.imageId];\r\n      } else if (medium.type === 'image') {\r\n        let {drawing} = model;\r\n        bookImage = options.media[medium.imageId];\r\n        if (!drawing) {\r\n          drawing = model.drawing = {\r\n            rId: nextRid(rels),\r\n            name: `drawing${++options.drawingsCount}`,\r\n            anchors: [],\r\n            rels: [],\r\n          };\r\n          options.drawings.push(drawing);\r\n          rels.push({\r\n            Id: drawing.rId,\r\n            Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing',\r\n            Target: `../drawings/${drawing.name}.xml`,\r\n          });\r\n        }\r\n        let rIdImage = drawingRelsHash[medium.imageId];\r\n        if (!rIdImage) {\r\n          rIdImage = nextRid(drawing.rels);\r\n          drawingRelsHash[medium.imageId] = rIdImage;\r\n          drawing.rels.push({\r\n            Id: rIdImage,\r\n            Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\r\n            Target: `../media/${bookImage.name}.${bookImage.extension}`,\r\n          });\r\n        }\r\n        drawing.anchors.push({\r\n          picture: {\r\n            rId: rIdImage,\r\n          },\r\n          range: medium.range,\r\n        });\r\n      }\r\n    });\r\n\r\n    // prepare tables\r\n    model.tables.forEach(table => {\r\n      // relationships\r\n      const rId = nextRid(rels);\r\n      table.rId = rId;\r\n      rels.push({\r\n        Id: rId,\r\n        Type: RelType.Table,\r\n        Target: `../tables/${table.target}`,\r\n      });\r\n\r\n      // dynamic styles\r\n      table.columns.forEach(column => {\r\n        const {style} = column;\r\n        if (style) {\r\n          column.dxfId = options.styles.addDxfStyle(style);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n    xmlStream.openNode('worksheet', WorkSheetXform.WORKSHEET_ATTRIBUTES);\r\n\r\n    const sheetFormatPropertiesModel = model.properties\r\n      ? {\r\n        defaultRowHeight: model.properties.defaultRowHeight,\r\n        dyDescent: model.properties.dyDescent,\r\n        outlineLevelCol: model.properties.outlineLevelCol,\r\n        outlineLevelRow: model.properties.outlineLevelRow,\r\n      }\r\n      : undefined;\r\n    const sheetPropertiesModel = {\r\n      outlineProperties: model.properties && model.properties.outlineProperties,\r\n      tabColor: model.properties && model.properties.tabColor,\r\n      pageSetup:\r\n        model.pageSetup && model.pageSetup.fitToPage\r\n          ? {\r\n            fitToPage: model.pageSetup.fitToPage,\r\n          }\r\n          : undefined,\r\n    };\r\n    const pageMarginsModel = model.pageSetup && model.pageSetup.margins;\r\n    const printOptionsModel = {\r\n      showRowColHeaders: model.showRowColHeaders,\r\n      showGridLines: model.showGridLines,\r\n      horizontalCentered: model.horizontalCentered,\r\n      verticalCentered: model.verticalCentered,\r\n    };\r\n    const sheetProtectionModel = model.sheetProtection;\r\n\r\n    this.map.sheetPr.render(xmlStream, sheetPropertiesModel);\r\n    this.map.dimension.render(xmlStream, model.dimensions);\r\n    this.map.sheetViews.render(xmlStream, model.views);\r\n    this.map.sheetFormatPr.render(xmlStream, sheetFormatPropertiesModel);\r\n    this.map.cols.render(xmlStream, model.cols);\r\n    this.map.sheetData.render(xmlStream, model.rows);\r\n    this.map.sheetProtection.render(xmlStream, sheetProtectionModel); // Note: must be after sheetData and before autoFilter\r\n    this.map.autoFilter.render(xmlStream, model.autoFilter);\r\n    this.map.mergeCells.render(xmlStream, model.mergeCells);\r\n    this.map.dataValidations.render(xmlStream, model.dataValidations);\r\n\r\n    // For some reason hyperlinks have to be after the data validations\r\n    this.map.hyperlinks.render(xmlStream, model.hyperlinks);\r\n\r\n    this.map.pageMargins.render(xmlStream, pageMarginsModel);\r\n    this.map.printOptions.render(xmlStream, printOptionsModel);\r\n    this.map.pageSetup.render(xmlStream, model.pageSetup);\r\n    this.map.headerFooter.render(xmlStream, model.headerFooter);\r\n    this.map.rowBreaks.render(xmlStream, model.rowBreaks);\r\n    this.map.drawing.render(xmlStream, model.drawing); // Note: must be after rowBreaks\r\n    this.map.picture.render(xmlStream, model.background); // Note: must be after drawing\r\n    this.map.tableParts.render(xmlStream, model.tables);\r\n\r\n    if (model.rels) {\r\n      // add a <legacyDrawing /> node for each comment\r\n      model.rels.forEach(rel => {\r\n        if (rel.Type === RelType.VmlDrawing) {\r\n          xmlStream.leafNode('legacyDrawing', {'r:id': rel.Id});\r\n        }\r\n      });\r\n    }\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n\r\n    if (node.name === 'worksheet') {\r\n      _.each(this.map, xform => {\r\n        xform.reset();\r\n      });\r\n      return true;\r\n    }\r\n\r\n    this.parser = this.map[node.name];\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'worksheet': {\r\n        const properties = this.map.sheetFormatPr.model;\r\n        if (this.map.sheetPr.model && this.map.sheetPr.model.tabColor) {\r\n          properties.tabColor = this.map.sheetPr.model.tabColor;\r\n        }\r\n        if (this.map.sheetPr.model && this.map.sheetPr.model.outlineProperties) {\r\n          properties.outlineProperties = this.map.sheetPr.model.outlinePropertiesx;\r\n        }\r\n        const sheetProperties = {\r\n          fitToPage: (this.map.sheetPr.model && this.map.sheetPr.model.pageSetup && this.map.sheetPr.model.pageSetup.fitToPage) || false,\r\n          margins: this.map.pageMargins.model,\r\n        };\r\n        const pageSetup = Object.assign(sheetProperties, this.map.pageSetup.model, this.map.printOptions.model);\r\n        this.model = {\r\n          dimensions: this.map.dimension.model,\r\n          cols: this.map.cols.model,\r\n          rows: this.map.sheetData.model,\r\n          mergeCells: this.map.mergeCells.model,\r\n          hyperlinks: this.map.hyperlinks.model,\r\n          dataValidations: this.map.dataValidations.model,\r\n          properties,\r\n          views: this.map.sheetViews.model,\r\n          pageSetup,\r\n          background: this.map.picture.model,\r\n          drawing: this.map.drawing.model,\r\n          tables: this.map.tableParts.model,\r\n        };\r\n\r\n        if (this.map.autoFilter.model) {\r\n          this.model.autoFilter = this.map.autoFilter.model;\r\n        }\r\n        if (this.map.sheetProtection.model) {\r\n          this.model.sheetProtection = this.map.sheetProtection.model;\r\n        }\r\n        \r\n        return false;\r\n      }\r\n\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    // options.merges = new Merges();\r\n    // options.merges.reconcile(model.mergeCells, model.rows);\r\n    const rels = (model.relationships || []).reduce((h, rel) => {\r\n      h[rel.Id] = rel;\r\n      if (rel.Type === RelType.Comments) {\r\n        model.comments = options.comments[rel.Target].comments;\r\n      }\r\n      return h;\r\n    }, {});\r\n    options.commentsMap = (model.comments || []).reduce((h, comment) => {\r\n      if (comment.ref) {\r\n        h[comment.ref] = comment;\r\n      }\r\n      return h;\r\n    }, {});\r\n    options.hyperlinkMap = (model.hyperlinks || []).reduce((h, hyperlink) => {\r\n      if (hyperlink.rId) {\r\n        h[hyperlink.address] = rels[hyperlink.rId].Target;\r\n      }\r\n      return h;\r\n    }, {});\r\n    options.formulae = {};\r\n\r\n    // compact the rows and cells\r\n    model.rows = (model.rows && model.rows.filter(Boolean)) || [];\r\n    model.rows.forEach(row => {\r\n      row.cells = (row.cells && row.cells.filter(Boolean)) || [];\r\n    });\r\n\r\n    this.map.cols.reconcile(model.cols, options);\r\n    this.map.sheetData.reconcile(model.rows, options);\r\n\r\n    model.media = [];\r\n    if (model.drawing) {\r\n      const drawingRel = rels[model.drawing.rId];\r\n      const match = drawingRel.Target.match(/\\/drawings\\/([a-zA-Z0-9]+)[.][a-zA-Z]{3,4}$/);\r\n      if (match) {\r\n        const drawingName = match[1];\r\n        const drawing = options.drawings[drawingName];\r\n        drawing.anchors.forEach(anchor => {\r\n          if (anchor.medium) {\r\n            const image = {\r\n              type: 'image',\r\n              imageId: anchor.medium.index,\r\n              range: anchor.range,\r\n            };\r\n            model.media.push(image);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    const backgroundRel = model.background && rels[model.background.rId];\r\n    if (backgroundRel) {\r\n      const target = backgroundRel.Target.split('/media/')[1];\r\n      const imageId = options.mediaIndex && options.mediaIndex[target];\r\n      if (imageId !== undefined) {\r\n        model.media.push({\r\n          type: 'background',\r\n          imageId,\r\n        });\r\n      }\r\n    }\r\n\r\n    model.tables = (model.tables || []).map(tablePart => {\r\n      const rel = rels[tablePart.rId];\r\n      return options.tables[rel.Target];\r\n    });\r\n\r\n    delete model.relationships;\r\n    delete model.hyperlinks;\r\n    delete model.comments;\r\n  }\r\n}\r\n\r\nWorkSheetXform.WORKSHEET_ATTRIBUTES = {\r\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n  'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\r\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\r\n  'mc:Ignorable': 'x14ac',\r\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\r\n};\r\n\r\nmodule.exports = WorkSheetXform;\r\n"],"file":"worksheet-xform.js"}