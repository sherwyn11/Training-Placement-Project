{"version":3,"sources":["../../../../../lib/xlsx/xform/strings/text-xform.js"],"names":["BaseXform","require","TextXform","xmlStream","model","openNode","length","addAttribute","writeText","closeNode","node","name","_text","text","push","join","replace","$0","$1","String","fromCharCode","parseInt","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB,C,CAEA;;;IAEMC,S;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,GAAnB;;AACA,UAAID,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAApD,EAAyD;AACvDH,QAAAA,SAAS,CAACI,YAAV,CAAuB,WAAvB,EAAoC,UAApC;AACD;;AACDJ,MAAAA,SAAS,CAACK,SAAV,CAAoBJ,KAApB;AACAD,MAAAA,SAAS,CAACM,SAAV;AACD;;;8BAMSC,I,EAAM;AACd,cAAQA,IAAI,CAACC,IAAb;AACE,aAAK,GAAL;AACE,eAAKC,KAAL,GAAa,EAAb;AACA,iBAAO,IAAP;;AACF;AACE,iBAAO,KAAP;AALJ;AAOD;;;8BAESC,I,EAAM;AACd,WAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAAhB;AACD;;;iCAEY;AACX,aAAO,KAAP;AACD;;;wBAjCS;AACR,aAAO,GAAP;AACD;;;wBAWW;AACV,aAAO,KAAKD,KAAL,CAAWG,IAAX,CAAgB,EAAhB,EAAoBC,OAApB,CAA4B,mBAA5B,EAAiD,UAACC,EAAD,EAAKC,EAAL;AAAA,eAAYC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,EAAD,EAAK,EAAL,CAA5B,CAAZ;AAAA,OAAjD,CAAP;AACD;;;;EAhBqBlB,S;;AAqCxBsB,MAAM,CAACC,OAAP,GAAiBrB,SAAjB","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\n//   <t xml:space=\"preserve\"> is </t>\r\n\r\nclass TextXform extends BaseXform {\r\n  get tag() {\r\n    return 't';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode('t');\r\n    if (model[0] === ' ' || model[model.length - 1] === ' ') {\r\n      xmlStream.addAttribute('xml:space', 'preserve');\r\n    }\r\n    xmlStream.writeText(model);\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  get model() {\r\n    return this._text.join('').replace(/_x([0-9A-F]{4})_/g, ($0, $1) => String.fromCharCode(parseInt($1, 16)));\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case 't':\r\n        this._text = [];\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    this._text.push(text);\r\n  }\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = TextXform;\r\n"],"file":"text-xform.js"}